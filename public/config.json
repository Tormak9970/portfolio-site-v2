{
	"projects": {
		"steam-deck-themes": {
			"category": "steam-deck",
			"name": "Steam Deck Themes",
			"time": "24 hours",
			"status": "Complete",
			"difficulty": "Simple",
			"description": "This project is a collection of CSS themes for the Steam Deck gaming handheld. Generally, my approach is to style things as dynamically as possible and provide inputs for all the colors. The themes are applied using a homebrew plugin for injecting CSS into the Steamdeck UI.",
			"content": {
				"time": 1693400212073,
				"blocks": [
					{
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "This project is a collection of CSS themes for the Steam Deck gaming handheld. Generally, my approach is to style things as dynamically as possible and provide inputs for all the colors. The themes are applied using a homebrew plugin for injecting CSS into the Steamdeck UI."
						}
					},
					{
						"type": "header",
						"data": {
							"text": "ColorMaster",
							"level": 2
						}
					},
					{
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/color-master.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "ColorMaster is by far the most complex theme I have made so far. 's goal is to provide styling for the entire steam desktop client. With over 30 options, it gives full control to the users, while also positioning itself as the perfect dependency for other themes wanting to style the entire client."
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Colored Toggles Desktop",
							"level": 2
						}
					},
					{
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/colored-toggles-desktop.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "A port of the colored toggles theme that works with Steam's desktop mode"
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Show Download Status",
							"level": 2
						}
					},
					{
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Show-Download-Status.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Show-Download-Status_uninstalled.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "This theme adds an icon to the library and homepage view indicating if a game is installed or not."
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Stylish Footer",
							"level": 2
						}
					},
					{
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Stylish-Footer.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "This theme makes the header and footer elements transparent while giving call to action descriptions a black background to maintain visibility."
						}
					},
					{
						"type": "header",
						"data": {
							"text": "SteamDeck U",
							"level": 2
						}
					},
					{
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/SteamDeckU.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "This theme provides users with options to customize each part of their keyboard. Valve offers first party keyboard themes, but they are eyesores and only work online."
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to contribute to the homebrew Steam Deck community",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.19.3"
			},
			"link": "https://github.com/Tormak9970/SteamDeckThemes",
			"isRelative": false,
			"img": "./img/projs/SteamDeckU.png",
			"org": "steam-deck-homebrew"
		},
		"portfolio-updater": {
			"category": "software-engineering",
			"name": "Portfolio Updater",
			"time": "55 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "Initially, this project was going to be written using the Electron framework, but right around when I started it, I heard about Tauri. Tauri is great because it allows you to build more secure apps with smaller bundle sizes, and has a better developer experience then Electron. The app itself makes updating my portfolio easy and straightforward, allowing me to focus more on my projects.",
			"content": {
				"time": 1679187370092,
				"blocks": [
					{
						"id": "mGX3WmsU_L",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "Sw2-lnOmFJ",
						"type": "paragraph",
						"data": {
							"text": "Initially, this project was going to be written using the Electron framework, but right around when I started it, I heard about Tauri. Tauri is great because it allows you to build more secure apps with smaller bundle sizes, and has a better developer experience then Electron. The app itself makes updating my portfolio easy and straightforward, allowing me to focus more on my projects."
						}
					},
					{
						"id": "zaDlOd6pQA",
						"type": "header",
						"data": {
							"text": "Version 1.2.3",
							"level": 2
						}
					},
					{
						"id": "ItRCOkv4TI",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Updated to use new my new logo",
									"items": []
								},
								{
									"content": "Fixed issues with double saving images",
									"items": []
								},
								{
									"content": "Fixed issues with deleting entries",
									"items": []
								}
							]
						}
					},
					{
						"id": "GgPP4taLLc",
						"type": "header",
						"data": {
							"text": "Version 1.2.2",
							"level": 2
						}
					},
					{
						"id": "E-oQ4QDwfj",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Added support for new portfolio data structure",
									"items": []
								},
								{
									"content": "Added buttons for archive management",
									"items": []
								},
								{
									"content": "Fixed old issue with org keys not being lower case",
									"items": []
								},
								{
									"content": "Fixed issue with project's org prop not being updated when added to an Organization's projects list",
									"items": []
								}
							]
						}
					},
					{
						"id": "uTV1I6vgqh",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "VCn01A58rk",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to rework the structure of my portfolio",
									"items": []
								},
								{
									"content": "Wanted to streamline the process of updating my portfolio",
									"items": []
								},
								{
									"content": "Wanted to learn how to use the Tauri framework",
									"items": []
								}
							]
						}
					},
					{
						"id": "RKQSFtpQz_",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "NlLvb9jqp4",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I now have a small tool that makes it very easy to keep my portfolio up to date",
									"items": []
								},
								{
									"content": "Was able to rework the structure of my portfolio into a more intuitive form",
									"items": []
								},
								{
									"content": "Got to learn the basics of the Tauri framework",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/Tormak9970/portfolio-updater",
			"isRelative": false,
			"img": "./img/projs/portfolio-updater.png",
			"org": "none"
		},
		"vite-plugin-sitemap": {
			"category": "web-dev",
			"name": "Vite-Plugin-Sitemap",
			"time": "20 hours",
			"status": "Complete",
			"difficulty": "Simple",
			"description": "I had the idea to make this npm package because I was working on my portfolio, and came across a neat little rollup plugin for generating sitemaps. Vite allows users to use most rollup plugins, so I just used that, but it caused some issues, so I decided to write my own with some added features.",
			"content": {
				"time": 1675718444292,
				"blocks": [
					{
						"id": "MvdHNFFz4d",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "gdxiqz3U_D",
						"type": "paragraph",
						"data": {
							"text": "I had the idea to make this npm package because I was working on my portfolio, and came across a neat little rollup plugin for generating sitemaps. Vite allows users to use most rollup plugins, so I just used that, but it caused some issues, so I decided to write my own with some added features."
						}
					},
					{
						"id": "it04sm7mzL",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "8vljNfeNgJ",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Found a similar Rollup plugin, which proved problematic when used with github actions",
									"items": []
								},
								{
									"content": "Needed to generate sitemaps for both this website and SWTORSlicers.org",
									"items": []
								},
								{
									"content": "Wanted to add a hook to allow dynamic sitemap generation to the plugin",
									"items": []
								}
							]
						}
					},
					{
						"id": "fIYKc3fzce",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "oHFnUhy81i",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Learned how to create an npm package",
									"items": []
								},
								{
									"content": "Created a useful little package for others to use",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://www.npmjs.com/package/@tormak/vite-plugin-sitemap",
			"isRelative": false,
			"img": "./img/projs/vite-plugin-sitemap.png",
			"org": "none"
		},
		"torc-character-designer": {
			"category": "web-dev",
			"name": "TORC Character Designer",
			"time": "350+ hours",
			"status": "In progress (stable)",
			"difficulty": "Complexed",
			"description": "This is one of my favorite projects. It is an external character creator and outfit designer for Star Wars The Old Republic. I really love this game and the community, and wanted to do something everyone could use and enjoy. It is very complexed, and I had to learn a lot of new topics and skills while working on it. I'm also very proud of it since it is the first tool of its kind made by anyone, ever, and that required me to solve a lot of problems no one else has done  before.",
			"content": {
				"time": 1675718503345,
				"blocks": [
					{
						"id": "Hr1P2ZVs1P",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "Z_ibVmilFC",
						"type": "paragraph",
						"data": {
							"text": "This is one of my favorite projects. It is an external character creator and outfit designer for Star Wars The Old Republic. I really love this game and the community, and wanted to do something everyone could use and enjoy. It is very complexed, and I had to learn a lot of new topics and skills while working on it. I'm also very proud of it since it is the first tool of its kind made by anyone, ever, and that required me to solve a lot of problems no one else has done  before."
						}
					},
					{
						"id": "7wGwqDv3JP",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "GIJaPDViYn",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I wanted to make something truly unique that had not been done before.",
									"items": [
										{
											"content": "This is the only Star Wars The Old Republic external character designer",
											"items": []
										}
									]
								},
								{
									"content": "I also wanted to make something people would not only want to use, but also something that would inspire people, and help them realize what they can do.",
									"items": []
								},
								{
									"content": "I had read comments and posts on a variety of platforms from people requesting/asking about a character viewer/creator, the earliest dating back to around 2014.",
									"items": []
								},
								{
									"content": "I also wanted to expedite the process from re-creating your character outside of the game (for 3D modeling, printing, or just for fun).",
									"items": [
										{
											"content": "The process could take upwards of one to two hour for one character.",
											"items": []
										},
										{
											"content": "With my program, it takes ~20 minutes.",
											"items": []
										}
									]
								}
							]
						}
					},
					{
						"id": "GjKDJqUFzQ",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "J4pkgn-Eko",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "How to read hexadecimal headers",
									"items": []
								},
								{
									"content": "How to read custom file formats",
									"items": []
								},
								{
									"content": "Basics of PHP",
									"items": []
								},
								{
									"content": "Advanced JavaScript",
									"items": []
								},
								{
									"content": "Better code organization",
									"items": []
								},
								{
									"content": "Better planning strategies",
									"items": []
								},
								{
									"content": "How to break down problems into achievable sections",
									"items": []
								},
								{
									"content": "How to effectively troubleshoot issues and debug",
									"items": []
								},
								{
									"content": "Sometimes the best solution is to take a break and work on different part/something else for a while",
									"items": []
								},
								{
									"content": "How to use the THREE.js library",
									"items": []
								},
								{
									"content": "Basics of 3D design/modeling",
									"items": [
										{
											"content": "HLSL",
											"items": []
										},
										{
											"content": "GLSL",
											"items": []
										},
										{
											"content": "The graphics pipeline (how 3D models are shaded and rendered)",
											"items": []
										},
										{
											"content": "How models, textures, lighting and shadows work",
											"items": []
										}
									]
								}
							]
						}
					},
					{
						"id": "7rIyp4Rdz7",
						"type": "header",
						"data": {
							"text": "3.0.0",
							"level": 2
						}
					},
					{
						"id": "NNFFVvkVLe",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "Vvfc4n8kxD",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Changed the way loading the options work",
									"items": [
										{
											"content": "It is now based of the head model's ID, which is how the game does it currently",
											"items": []
										}
									]
								},
								{
									"content": "Converted the entire project to TypeScript, which helped eliminate some cases where output data would be a string instead of a number",
									"items": []
								},
								{
									"content": "Project now uses Vite for bundling and minifying, which improves performance",
									"items": []
								}
							]
						}
					},
					{
						"id": "LX4pxBmLp1",
						"type": "header",
						"data": {
							"text": "2.0.0",
							"level": 2
						}
					},
					{
						"id": "PRoxoiGs_k",
						"type": "paragraph",
						"data": {
							"text": "Bug Fixes:"
						}
					},
					{
						"id": "0KDYqJ2WAc",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Fixed many broken items (only a few left still needing to be fixed)",
									"items": []
								},
								{
									"content": "Fixed a few edge cases where things like hoods would render on Togrutas and Twi'leks",
									"items": []
								},
								{
									"content": "Fixed an issue where exporting the zip had no file extension on Firefox",
									"items": []
								},
								{
									"content": "Fixed long loading times",
									"items": []
								}
							]
						}
					},
					{
						"id": "UE1PWmPCZO",
						"type": "paragraph",
						"data": {
							"text": "Changes:"
						}
					},
					{
						"id": "xjjLeJudXG",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Now has dark side corruption",
									"items": []
								}
							]
						}
					},
					{
						"id": "rXcChFl3ch",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Release2__corruption.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "CzLhCiUG21",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Added Eye Cube Maps (the glossy reflection on the character's eyes)",
									"items": []
								}
							]
						}
					},
					{
						"id": "L6fWJJIRH3",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/EyeCubeMap.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "L8A6Ifg9Be",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Changed the lighting to be closer to the preview window",
									"items": []
								},
								{
									"content": "Added a Unify Colors option for each armor slot (this makes the slot in question become the same color as the chest slot)",
									"items": []
								},
								{
									"content": "Added ability to apply dyes for each slot",
									"items": []
								},
								{
									"content": "Added tick marks to make it easier to tell where to click to move the slider to a specific value",
									"items": []
								},
								{
									"content": "Re-arranged the order of a few customizations to match in-game numbering",
									"items": []
								},
								{
									"content": "Updated many of the UI images to make them clearer",
									"items": []
								},
								{
									"content": "Now have a randomize button, and it also randomizes the slider values on load",
									"items": []
								},
								{
									"content": "Tweaked a bunch of the rendering settings (camera position, lighting angle, lighting intensity, etc.)",
									"items": []
								}
							]
						}
					},
					{
						"id": "phWf751nHJ",
						"type": "header",
						"data": {
							"text": "1.0.0",
							"level": 2
						}
					},
					{
						"id": "UnOPXgDHGc",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "UtAn8loNXU",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Users can download a <i>.zip</i> with all the necessary info to re-create their character in blender",
									"items": []
								},
								{
									"content": "Has all character creator options that the game has",
									"items": [
										{
											"content": "Customization sliders",
											"items": []
										},
										{
											"content": "Gender",
											"items": []
										},
										{
											"content": "Classes",
											"items": []
										},
										{
											"content": "Species",
											"items": []
										}
									]
								},
								{
									"content": "Allows changing of light-color gradient",
									"items": []
								},
								{
									"content": "Users can search by keywords to get a list of every related item, which they can then select from to display one",
									"items": []
								},
								{
									"content": "Users can add a global dye to their outfit",
									"items": []
								},
								{
									"content": "Users can share their creations using the sharing url button at the bottom",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://torcommunity.com/tools/character-designer",
			"isRelative": false,
			"img": "./img/projs/Release_one.png",
			"org": "torcommunity"
		},
		"decky-frontend-lib": {
			"category": "steam-deck",
			"name": "Decky Frontend Lib",
			"time": "6 hours",
			"status": "In Progress",
			"difficulty": "Simple",
			"description": "The Decky Frontend Lib is a library with reversed engineered UI components, custom components and utility classes. The library helps plugin developers integrate their plugins seamlessly with Valve's react UI, and modify css styles without affecting the regular UI.",
			"content": {
				"time": 1675718637746,
				"blocks": [
					{
						"id": "lAVCthO1td",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "vc4JYLLrvS",
						"type": "paragraph",
						"data": {
							"text": "The Decky Frontend Lib is a library with reversed engineered UI components, custom components and utility classes. The library helps plugin developers integrate their plugins seamlessly with Valve's react UI, and modify css styles without affecting the regular UI."
						}
					},
					{
						"id": "flN2mXc-or",
						"type": "header",
						"data": {
							"text": "Contributions",
							"level": 2
						}
					},
					{
						"id": "tT3t6l_RiR",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Refactoring of static classes to use a more dynamic approach",
									"items": []
								},
								{
									"content": "ReorderableList component - gamepad interactable reorderable list",
									"items": []
								}
							]
						}
					},
					{
						"id": "AMb_eC9-kr",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "UMY1MXQSOi",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to fix bugs I encountered",
									"items": []
								},
								{
									"content": "Wanted to add features I had discovered",
									"items": []
								},
								{
									"content": "Wanted to contribute to SDH",
									"items": []
								}
							]
						}
					},
					{
						"id": "gG-wf_ZTmW",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "sdDs1ClfLh",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Learned how to use the Remote React Debugger",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/SteamDeckHomebrew/decky-frontend-lib",
			"isRelative": false,
			"img": "./img/projs/Decky-frontend-lib.png",
			"org": "steam-deck-homebrew"
		},
		"portfolio-v2": {
			"category": "web-dev",
			"name": "Portfolio V2",
			"time": "63 hours",
			"status": "Complete (continually updated)",
			"difficulty": "Moderate",
			"description": "This project is the website you are currently on. It is a replacement for my previous portfolio website, which I had not been keeping up to date. I decided to remake it from scratch using Svelte, TypeScript, and SASS (later removed), all of which are awesome frameworks I have wanted to learn for a while.",
			"content": {
				"time": 1679187485479,
				"blocks": [
					{
						"id": "EHEWUSDdP5",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "5NmJ0NTUar",
						"type": "paragraph",
						"data": {
							"text": "This project is the website you are currently on. It is a replacement for my previous portfolio website, which I had not been keeping up to date. I decided to remake it from scratch using Svelte, TypeScript, and SASS (later removed), all of which are awesome frameworks I have wanted to learn for a while."
						}
					},
					{
						"id": "YUb2kWw8H1",
						"type": "header",
						"data": {
							"text": "Update v3.1.1",
							"level": 2
						}
					},
					{
						"id": "Srxpm2Eomq",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Moved dots to be directly on the portfolio site",
									"items": []
								},
								{
									"content": "Mobile about page was not scrolling",
									"items": []
								},
								{
									"content": "Fixed link coloring",
									"items": []
								}
							]
						}
					},
					{
						"id": "Pcag4cH_PI",
						"type": "header",
						"data": {
							"text": "Update v3.1.0",
							"level": 2
						}
					},
					{
						"id": "j1kUxlOTAT",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Fixed styling edge case causing entry descriptions to go off screen",
									"items": []
								},
								{
									"content": "Fixed delay when scrolling entries",
									"items": []
								},
								{
									"content": "Fixed bug with experience layout",
									"items": []
								},
								{
									"content": "Fixed bug with art layout",
									"items": []
								},
								{
									"content": "Centered entry images",
									"items": []
								},
								{
									"content": "Fixed org image sizing",
									"items": []
								}
							]
						}
					},
					{
						"id": "ot3gQL5aAL",
						"type": "header",
						"data": {
							"text": "Update v3.0.0",
							"level": 2
						}
					},
					{
						"id": "apgMEblnTs",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Changed Organizations to have a smaller preview and their own page with more details. This helps improve the layout, especially on smaller devices phones.",
									"items": []
								},
								{
									"content": "Split projects into \"Projects\" and \"Archive\". This allows the projects page to show of my newest/most noteworthy projects, while still allowing me to share my less impressive projects.",
									"items": []
								},
								{
									"content": "Fixed position of the jump nav stop getting messed up on window resize",
									"items": []
								},
								{
									"content": "Fixed relative paths for images breaking pages when navigating to a sub URL",
									"items": []
								},
								{
									"content": "Added a custom 404 fallback page",
									"items": []
								},
								{
									"content": "Changed all sections to be sorted by most recent entry",
									"items": []
								}
							]
						}
					},
					{
						"id": "S0i4_y-_iq",
						"type": "header",
						"data": {
							"text": "Update v2.0.0",
							"level": 2
						}
					},
					{
						"id": "aRs6sJ9plG",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Removed all SASS",
									"items": [
										{
											"content": "While SASS is a great tool, it is becoming obsolete with the improvements to vanilla CSS, and adds unnecessary compiling steps to the project",
											"items": []
										}
									]
								},
								{
									"content": "Updated the scroll indicator",
									"items": [
										{
											"content": "it is now a fixed height (which is based on screen height), which will work better as I add more entries to each page",
											"items": []
										}
									]
								},
								{
									"content": "Changed how the scroll transitions are implimented",
									"items": [
										{
											"content": "They are now modified svelte transitions which significantly simplifies their implementation",
											"items": []
										}
									]
								},
								{
									"content": "Optimized image sizes to improve loading times",
									"items": []
								},
								{
									"content": "Changed the mobile menu to slide over the page",
									"items": [
										{
											"content": "provides a cleaner experience",
											"items": []
										}
									]
								},
								{
									"content": "Added a copyright label to all pages",
									"items": []
								},
								{
									"content": "Added a more interesting landing page",
									"items": []
								},
								{
									"content": "Reduced Cross Origin requests to improve loading times",
									"items": []
								}
							]
						}
					},
					{
						"id": "7NBr7k3fWI",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "yaPSjIxAEs",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I wanted to make a portfolio site that was easier to keep up to date and looked professional",
									"items": []
								},
								{
									"content": "I wanted to learn some web technologies I had seen in the past but never got around to looking into",
									"items": []
								}
							]
						}
					},
					{
						"id": "NmpQSXEmtS",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "n2iyN06a-3",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I have a portfolio website that looks professional, is easy to update, and that I can be proud of",
									"items": []
								},
								{
									"content": "I have experience using TypeScript, Svelte, and SASS",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://travislane.dev",
			"isRelative": false,
			"img": "./img/projs/portfolio-site-v2.png",
			"org": "none"
		},
		"darkest-dungeon-save-editor": {
			"category": "software-engineering",
			"name": "Darkest Dungeon Save Editor",
			"time": "28 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "This project is a save editor for the Indie Rogue-lite game, Darkest Dungeon. The app includes a robust backup system, de-hashing feature, save decoding to valid JSON, save file encoding from JSON, and offers all features through the command line as well. The app is made using Tauri, Svelte, and TypeScript.",
			"content": {
				"time": 1668884602490,
				"blocks": [
					{
						"id": "5y1Zw-VRKn",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "baa741tD8i",
						"type": "paragraph",
						"data": {
							"text": "This project is a save editor for the Indie Rogue-lite game, Darkest Dungeon. The app includes a robust backup system, de-hashing feature, save decoding to valid JSON, save file encoding from JSON, and offers all features through the command line as well. The app is made using Tauri, Svelte, and TypeScript."
						}
					},
					{
						"id": "2BWvYLNnC2",
						"type": "paragraph",
						"data": {
							"text": " The game stores save data in files with the <b>.json</b> extension, however the format is not actually JSON, but rather a very similar format. There are just enough differences to require reading the files from scratch. In order to figure out how to parse the save format I referenced an older <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://github.com/robojumper/DarkestDungeonSaveEditor\">save editor</a>."
						}
					},
					{
						"id": "RDt-8PMnEw",
						"type": "header",
						"data": {
							"text": "Features",
							"level": 2
						}
					},
					{
						"id": "OK3KE8Ikwt",
						"type": "header",
						"data": {
							"text": "App",
							"level": 3
						}
					},
					{
						"id": "2uk79oTt_6",
						"type": "paragraph",
						"data": {
							"text": "The app has four main features, Property Name Generation, Save File Decoding, Save File Encoding, and a robust Backup System."
						}
					},
					{
						"id": "JfXpE3N6EZ",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/DDSEditor-main-ui.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "hL9RdJm4RS",
						"type": "paragraph",
						"data": {
							"text": "The property name generation is necessary because some properties in the save files are hashed, and in order to figure out the property names the app must scan the game data directory and generate a cache of all found property names. This allows the save editor to correctly label all of the properties when it decodes a save, making it easier for users to find the fields they wish to edit."
						}
					},
					{
						"id": "jAJuPQl_3P",
						"type": "paragraph",
						"data": {
							"text": "One of the two most main features is the save file decoding. This is how the program converts the binary <b>.json</b>&nbsp;files to actual, editable JSON data. This makes it much easier for users to edit their saves, and simplifies the process of backing up saves in a readable format. In order to support editing the JSON data in a nice way, I used the CodeMirror library with custom styling to match the theme of the UI."
						}
					},
					{
						"id": "eZrT6FK1N1",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/json-editor.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "jAGsI-zXbO",
						"type": "paragraph",
						"data": {
							"text": "The second main feature is the save file encoding, the necessary counterpart to decoding. This feature allows users to save their changes and convert the editable JSON data back into the binary <b>.json</b>&nbsp;data, enabling their edits to be reflected in the actual game. This works be essentially reversing the process done for decoding, and writing the resulting binary data to a file with the&nbsp;<b>.json</b>&nbsp;extension."
						}
					},
					{
						"id": "e1HIf7YPS3",
						"type": "paragraph",
						"data": {
							"text": "The final feature is the backup system. When messing with important data such as game saves, it is always important to offer a backup system to cover cases where the user (or the app during testing) makes a mistake that corrupts the save files. The system saves a zip of all save files with a name containing the time and the profile slot saved. This allows the user to keep multiple backups, and easily figure out when they were created. By having a backup system (and prompting users to use it), any issues related to the app corrupting game saves can be eliminated, limiting the only possible problem to the user not making backups."
						}
					},
					{
						"id": "yaXh8FYqU0",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Backup-manager.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "YJv4LZzRec",
						"type": "header",
						"data": {
							"text": "CLI",
							"level": 3
						}
					},
					{
						"id": "74B1t95R53",
						"type": "paragraph",
						"data": {
							"text": "The reason for including a Command Line Interface (CLI) with the program was mainly to ensure that none of the features of the older save editor were missing from my version, as that would defeat the purpose of having a newer, better version. Additionally, having the ability to run logic from the command line makes automating tasks such as decoding and then backing up saves much easier, as it can all be done through a single script."
						}
					},
					{
						"id": "rHtePk4Va7",
						"type": "header",
						"data": {
							"text": "Design Philosophy",
							"level": 2
						}
					},
					{
						"id": "1KNDwtoEXr",
						"type": "paragraph",
						"data": {
							"text": "During the development of this program, I learned about the Model View Controller (MVC) design pattern in school and thought what better way to reinforce what I was learning then to implement it myself. Consequently, this program was made with the MVC pattern in mind, isolating all UI interaction to a set of controller classes (namely the <b>AppController</b>, <b>ToastController</b>, and <b>CliController </b>classes) this allows for better separation between the UI and the logic of the program."
						}
					},
					{
						"id": "Gn9PMkuZUb",
						"type": "paragraph",
						"data": {
							"text": "Another heavy consideration when developing this tool was that I wanted to focus on proper component-based design. In the past I often have not done a great job of making components flexible and reusable, and sometimes not making parts of the UI separate components when I should. For this project I focused on making all components flexible and reusable and paid close attention to what should and should not be its own component."
						}
					},
					{
						"id": "NVgusPwjkq",
						"type": "paragraph",
						"data": {
							"text": "One of the pitfalls of JavaScript/TypeScript is the binary reading/writing support. It can be frustrating and tedious to work with, especially when compared to other languages such as C# or Java. In the past I had written my own <b>Reader</b>&nbsp;class which greatly improves the quality of life when working with binary data, however for this project I also needed a <b>Writer</b>&nbsp;class which was measurably more difficult to make then the <b>Reader</b>&nbsp;class. To start, I used the <b>Reader</b>&nbsp;class as a reference, which helped to get me started, and I was able to implement almost all the features I wanted. Eventually I ran into an issue with TypeScript's lack of expandable <b>ArrayBuffers</b>. This was a necessary feature, so I added the classic solution of using an <b>expandCapacity</b>&nbsp;method to the <b>Writer</b>&nbsp;class. This allowed the writer to write bytes for an effectively infinite length but had one pitfall. Due to how <b>expandCapacity</b>&nbsp;doubles the length of the <b>Writer's</b>&nbsp;underlying <b>ArrayBuffer</b>, often I would be left with a large amount of 00 bytes at the end of the <b>Writer</b>. In order to fix this, I added a <b>trim</b>&nbsp;method to cut all trailing 00 bytes from the underlying <b>ArrayBuffer</b>."
						}
					},
					{
						"id": "ec9N1UbSbG",
						"type": "header",
						"data": {
							"text": "Licensing",
							"level": 2
						}
					},
					{
						"id": "MEdi0dmRKH",
						"type": "paragraph",
						"data": {
							"text": "For this project I chose to use the GPL 3.0 license because it provides freedom for modifications people may wish to make, but also ensures that I will be credited appropriately and that my work can't be used by a company to make proprietary software. Implementing the license took a bit of effort but was worth it. Since the application has both a UI and a CLI, the recommendation was to include a short notice in both, as well at the top of each file in the program. For the UI the short notice is included in the about window, and for the CLI there are two commands, <b>show w</b>&nbsp;for the warranty information, and <b>show c</b>&nbsp;for the conditions information."
						}
					},
					{
						"id": "Ylyrr8l9V6",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "AnXhqyfZls",
						"type": "paragraph",
						"data": {
							"text": "The reasons I decided to tackle this project were primarily my interest in the game, wanting to make a project using the MVC pattern (which I had just learned in school), and being unsatisfied with the older save editor. I was also interested in exploring the changes that had been made to the CodeMirror library (what I used for the JSON editor in the main UI of the app."
						}
					},
					{
						"id": "chebiUxN8p",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "jjllveJ9KV",
						"type": "paragraph",
						"data": {
							"text": "Implementing the MVC design pattern in a project of my own helped me understand the real-world usage and application of the pattern. Completing this project also helped me understand why it is important to choose the right License for my projects, as well as how to properly implement them. Finally, in making this app I was able to gain a better understanding of how to design UI components to improve UI design efficiency and create a tool that is useful to not just me but other as well."
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/Tormak9970/Darkest-Dungeon-Save-Editor",
			"isRelative": false,
			"img": "./img/projs/DDSEditor-main-ui.png",
			"org": "none"
		},
		"untitled-card-game": {
			"category": "web-games",
			"name": "Untitled Card Game",
			"time": "35 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "This is a TypeScript and Svelte implementation of the classic card game Solitaire, based on the Klondike rules. The UI has a pixel art theme, and the face cards are animated using classic frame by frame sprites. It has a full undo/redo system, difficulty settings, score keeping, and animations for flipping over cards, undos, and redos. These were especially difficult considering a side effect of the Drag-n-Drop library I settled on is that Svelte's built in animation system doesn't work, so these had to be done by hand.",
			"content": {
				"time": 1679188413134,
				"blocks": [
					{
						"id": "KmqwGgYXxy",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "XG0W_wQ5Jr",
						"type": "paragraph",
						"data": {
							"text": "This is a TypeScript and Svelte implementation of the classic card game Solitaire, based on the Klondike rules. The UI has a pixel art theme, and the face cards are animated using classic frame by frame sprites. It has a full undo/redo system, difficulty settings, score keeping, and animations for flipping over cards, undos, and redos. These were especially difficult considering a side effect of the Drag-n-Drop library I settled on is that Svelte's built in animation system doesn't work, so these had to be done by hand."
						}
					},
					{
						"id": "25TRtnv23G",
						"type": "header",
						"data": {
							"text": "Features",
							"level": 2
						}
					},
					{
						"id": "yP-slOzEcg",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Multiple difficulties",
									"items": [
										{
											"content": "Different difficulties change the number of cards flipped over at a time, penalty for undos/redos, penalty for recycling the deck, and overall bonus to your score at the end.",
											"items": []
										}
									]
								},
								{
									"content": "Undo and Redo system",
									"items": [
										{
											"content": "Any move can be undone and redone, and the cards will transition smoothly from one position to the other",
											"items": []
										}
									]
								},
								{
									"content": "Seeded deals",
									"items": [
										{
											"content": "When dealing, the card deck is shuffled with a seed, making deals replicateable",
											"items": []
										}
									]
								},
								{
									"content": "Browser and File based saving",
									"items": []
								},
								{
									"content": "Pixel art inspired cards and UI",
									"items": []
								}
							]
						}
					},
					{
						"id": "zFo_A58yiz",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "yLOZV8wLJa",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I was able to recreate one of my favorite games with a fun asthetic",
									"items": []
								},
								{
									"content": "I was able to familiarize myself with a robust Svelte Drag-n-Drop library",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://solitaire.travislane.dev/",
			"isRelative": false,
			"img": "./img/projs/untitled-card-game.png",
			"org": "none"
		},
		"bash-shortcuts": {
			"category": "steam-deck",
			"name": "Bash Shortcuts",
			"time": "70 hours",
			"status": "Complete",
			"difficulty": "Complex",
			"description": "This project is a plugin for Valve's Steam Deck handheld game console that allows users to run scripts and apps from game mode. It supports passing flags to scripts with a variety of values, and hooks for notable events that can occur while using the device. The name comes from the plugin using bash to run other scripts in order to trick Steam into thinking they are games.",
			"content": {
				"time": 1686665149067,
				"blocks": [
					{
						"id": "nZjfcxUvB2",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "xPDAeM17W0",
						"type": "paragraph",
						"data": {
							"text": "This project is a plugin for Valve's Steam Deck handheld game console that allows users to run scripts and apps from game mode. It supports passing flags to scripts with a variety of values, and hooks for notable events that can occur while using the device. The name comes from the plugin using bash to run other scripts in order to trick Steam into thinking they are games."
						}
					},
					{
						"id": "ZcPh5ZImZc",
						"type": "header",
						"data": {
							"text": "Update v2.0.3",
							"level": 2
						}
					},
					{
						"id": "LlkMa_AAqK",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Fixed issues caused by changes to the SteamClient API",
									"items": []
								},
								{
									"content": "Fixed the game start hook not running as intended",
									"items": []
								},
								{
									"content": "Fixed a typo causing non app shortcuts to break",
									"items": []
								}
							]
						}
					},
					{
						"id": "gGJoITC9hm",
						"type": "header",
						"data": {
							"text": "Update v2.0.0",
							"level": 2
						}
					},
					{
						"id": "Lp5gN5R84O",
						"type": "paragraph",
						"data": {
							"text": "Bash Shortcuts is now feature complete."
						}
					},
					{
						"id": "8tNnFLMuyb",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Switched to the new reorderable list",
									"items": []
								},
								{
									"content": "Added support for running multiple shortcuts at once",
									"items": []
								},
								{
									"content": "Switched over to instance model",
									"items": []
								},
								{
									"content": "Plugin now deletes any leftover instances on boot",
									"items": []
								},
								{
									"content": "Added support for killing long running shortcuts",
									"items": []
								},
								{
									"content": "Plugin now uses the new Decky log directory",
									"items": []
								},
								{
									"content": "Plugin now uses the new Decky settings manager",
									"items": []
								},
								{
									"content": "UI now updates properly when the shortcut is exited from outside the plugin",
									"items": []
								},
								{
									"content": "Added custom deployment scripts",
									"items": []
								},
								{
									"content": "Implemented WebSocket to allow for backend -&gt; frontend communication",
									"items": [
										{
											"content": "<a target=\"_blank\" href=\"https://github.com/pikhovkin/simple-websocket-server\">Docs for websocket server I used</a>",
											"items": []
										},
										{
											"content": "<a target=\"_blank\" href=\"https://github.com/websocket-client/websocket-client\">Docs for the websocket client I used</a>",
											"items": []
										}
									]
								},
								{
									"content": "Non app shortcuts now show a toast when the finish",
									"items": []
								},
								{
									"content": "Switched the manager window to be called config and added icons to better align with Steam’s settings window",
									"items": []
								},
								{
									"content": "Plugin now has a setting for WebSocket Port",
									"items": []
								},
								{
									"content": "Fixed apps not opening fullscreen",
									"items": [
										{
											"content": "Switched from using wmctrl (which Valve no longer installs automatically) to Xdotool",
											"items": []
										}
									]
								},
								{
									"content": "Fixed the error that was showing up in konsole when launched",
									"items": []
								},
								{
									"content": "Added setting to enable/disable flags",
									"items": []
								},
								{
									"content": "All non app shortcuts are now given 5 flags",
									"items": [
										{
											"content": "Date",
											"items": []
										},
										{
											"content": "Time",
											"items": []
										},
										{
											"content": "Current user's username",
											"items": []
										},
										{
											"content": "Current gameId",
											"items": []
										},
										{
											"content": "Current game name",
											"items": []
										}
									]
								},
								{
									"content": "Added guides to config window",
									"items": [
										{
											"content": "Using <a target=\"_blank\" href=\"https://github.com/markdown-it/markdown-it\">Markdown-it</a> for parsing the markdown",
											"items": []
										}
									]
								},
								{
									"content": "Added hooks for:",
									"items": [
										{
											"content": "Log In and Out",
											"items": []
										},
										{
											"content": "Game Start and End",
											"items": []
										},
										{
											"content": "Game Install, Update, and Uninstall",
											"items": []
										},
										{
											"content": "Achievement Unlocked",
											"items": []
										},
										{
											"content": "Screenshot Taken",
											"items": []
										},
										{
											"content": "Deck Sleep and Shutdown",
											"items": []
										}
									]
								},
								{
									"content": "Plugin now checks if shortcut is running when edited/deleted and kill it<a target=\"_blank\" href=\"https://github.com/pikhovkin/simple-websocket-server\"></a>",
									"items": []
								}
							]
						}
					},
					{
						"id": "Z4BivgwJkR",
						"type": "header",
						"data": {
							"text": "Update v1.2.0",
							"level": 2
						}
					},
					{
						"id": "1MnkECsl_4",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Fixed issue where the plugin deleted other shortcuts",
									"items": []
								},
								{
									"content": "Fixed multiple shortcuts getting created",
									"items": []
								},
								{
									"content": "Fixed issues on non-stable SteamOS channels",
									"items": []
								},
								{
									"content": "Steam was not running shortcutsRunner.sh",
									"items": [
										{
											"content": "Issue with line endings, fixed with dos2unix",
											"items": []
										}
									]
								},
								{
									"content": "Added support for non-default user names and devices other than steamdecks",
									"items": []
								},
								{
									"content": "Fixed bug where plugin would lag UI from infinite refreshes when there were 0 shortcuts",
									"items": []
								},
								{
									"content": "Added a lot of logging to help with error tracking",
									"items": []
								}
							]
						}
					},
					{
						"id": "mXmVM7rad_",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "xevYl-aYqV",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to contribute to the homebrew Steam Deck community",
									"items": []
								},
								{
									"content": "Wanted a more customizable alternative to the existing keyboards",
									"items": []
								},
								{
									"content": "Wanted customizable keyboards that worked offline",
									"items": []
								}
							]
						}
					},
					{
						"id": "KgQPukLNZY",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "qXVdi9yViM",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Came up with a unique idea for the homebrew community",
									"items": []
								},
								{
									"content": "Created a highly customizable keyboard that also works offline",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.27.0"
			},
			"link": "https://github.com/Tormak9970/bash-shortcuts",
			"isRelative": false,
			"img": "./img/projs/bash-shortcuts-preview.png",
			"org": "steam-deck-homebrew"
		},
		"steam-art-manager": {
			"category": "software-engineering",
			"name": "Steam Art Manager",
			"time": "64 hours",
			"status": "In Progress",
			"difficulty": "Complex",
			"description": "Steam Art Manager is a tool for managing the art for your Steam game library. It allows users to view their library and upload images either from their computer, or they can browse images from SteamGridDB. The tool also allows users to export their custom art to and from .zip files for easy transfers between computers. The app manages to do all this while avoiding needless usage of the Steam Web API.",
			"content": {
				"time": 1686667741075,
				"blocks": [
					{
						"id": "h5k8NLOocY",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "kyLiPdq-5h",
						"type": "paragraph",
						"data": {
							"text": "Steam Art Manager is a tool for managing the art for your Steam game library. It allows users to view their library and upload images either from their computer, or they can browse images from SteamGridDB. The tool also allows users to export their custom art to and from .zip files for easy transfers between computers. The app manages to do all this while avoiding needless usage of the Steam Web API."
						}
					},
					{
						"id": "Gwh4HGP-l_",
						"type": "header",
						"data": {
							"text": "Overview of how Steam's Custom Art System Works",
							"level": 2
						}
					},
					{
						"id": "3KFcUXDEG8",
						"type": "paragraph",
						"data": {
							"text": "Steam provides a system for users to set custom art for any of the images associated with one of their games. This works by adding an image with a specific name to&nbsp;<i>steam/userdata/USER_ID/config/grid</i>, at which point Steam will automatically detect it when it loads. The Steam Art Manager takes advantage of this by adding images the user selects to this directory with the required names."
						}
					},
					{
						"id": "LwUboVFLg3",
						"type": "header",
						"data": {
							"text": "Features",
							"level": 2
						}
					},
					{
						"id": "jeXDXi1V62",
						"type": "paragraph",
						"data": {
							"text": "The tool has a variety of features, most of which are listed previously, but are described in more detail here. Below is an image of the Steam Art Manager running on windows. Any descriptions of the UI will use this image as a reference."
						}
					},
					{
						"id": "vg53nr8Qhd",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/final-sarm-ui.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "PAgWhT6igp",
						"type": "header",
						"data": {
							"text": "Filters",
							"level": 3
						}
					},
					{
						"id": "NKrGcvmQiX",
						"type": "paragraph",
						"data": {
							"text": "This is the section on the left. These options are used to filter the results from SteamGridDB. Styles filter the stylistic type of the images, dimensions are self explanatory, mimes are the image format, types determine whether gifs or just images are used, and tags filter by noteworthy warnings on the images. The defaults are the same as the website."
						}
					},
					{
						"id": "LzDixJb5cv",
						"type": "header",
						"data": {
							"text": "Games",
							"level": 3
						}
					},
					{
						"id": "unR2u8KSnX",
						"type": "paragraph",
						"data": {
							"text": "The games section is in the middle. It loads all of your owned steam games, filtered alphabetically. A search bar is provided for users who have sizeable Steam libraries, or simply wish to find things faster. Unfortunately, the tool occasionally finds games the user has never played, has hidden, or no longer owns, so there is a \"hide game\" option. These selections are saved across sessions, and can be viewed by toggling the \"show hidden\" option."
						}
					},
					{
						"id": "8fMxnzJ5K-",
						"type": "header",
						"data": {
							"text": "Grids",
							"level": 3
						}
					},
					{
						"id": "xHfeMeH4C7",
						"type": "paragraph",
						"data": {
							"text": "The final section is on the right. This will only be populated if the user provides a SteamGridDB API key (which a dialog for can be opened by clicking the \"Add SteamGrid Key\" button). It allows the user to select which type of game image they wish to set, and browse SteamGridDB's collection of images for that game."
						}
					},
					{
						"id": "6trFbx2AgR",
						"type": "header",
						"data": {
							"text": "Custom Upload",
							"level": 3
						}
					},
					{
						"id": "1jz_a6V5VQ",
						"type": "paragraph",
						"data": {
							"text": "Users can also upload art from their own computer, allowing them to not have to rely on SteamGridDB."
						}
					},
					{
						"id": "8YN_8FLy34",
						"type": "header",
						"data": {
							"text": "Import/Export",
							"level": 3
						}
					},
					{
						"id": "YaSit5QCpZ",
						"type": "paragraph",
						"data": {
							"text": "The final major feature of this project is importing and exporting custom art. This works by reading all the files in the current user's <i>grids</i>&nbsp;directory, and generating a zip containing them. Alternatively, the app reads the provided zip, and copies the images inside to the user's <i>grids</i>&nbsp;directory, overriding existing images if they exist."
						}
					},
					{
						"id": "N3tM3OGBat",
						"type": "header",
						"data": {
							"text": "Caching",
							"level": 3
						}
					},
					{
						"id": "uxvbuy4XKj",
						"type": "paragraph",
						"data": {
							"text": "Because I am using the SteamGridDB API, I had to be cautious about how and when I made requests to the api. To address this, the app will save requests made during the same session, and it downloads images the user selects, so it will only download each image up to once per session. This helps reduce traffic to the API."
						}
					},
					{
						"id": "2_HFanNSUs",
						"type": "header",
						"data": {
							"text": "Lazy Loading Images",
							"level": 3
						}
					},
					{
						"id": "PZZZRcyy0A",
						"type": "paragraph",
						"data": {
							"text": "One issue I ran into while building this project is because I needed to load so many images for both games and the SteamGridDB results, it was causing huge performance issues. I was able to remedy this by using lazy loading combined with smaller images. It can occasionally stutter when the user scrolls to fast, but its far within the acceptable range."
						}
					},
					{
						"id": "zP8pvwJ4Is",
						"type": "header",
						"data": {
							"text": "Grid Cleaning",
							"level": 3
						}
					},
					{
						"id": "ROFBONAJcy",
						"type": "paragraph",
						"data": {
							"text": "Sometimes Steam randomly changes the appid of non steam games, which leads to having a lot of images that aren't in use. This feature automatically finds them and deletes them, but can also be configured to delete grids for any game."
						}
					},
					{
						"id": "RnN8fwPdYt",
						"type": "header",
						"data": {
							"text": "Manual Games",
							"level": 3
						}
					},
					{
						"id": "D_jG3KRZjw",
						"type": "paragraph",
						"data": {
							"text": "Some Steam games get delisted, and consequently aren't loaded by SARM. To account for this, users are able to manually add games to SARM, which function like regular Steam games."
						}
					},
					{
						"id": "vRkIK_fBwy",
						"type": "header",
						"data": {
							"text": "Workflow Updates",
							"level": 2
						}
					},
					{
						"id": "ysb_b7Wcss",
						"type": "paragraph",
						"data": {
							"text": "In the process of working on the Steam Art Manager, I ended up making many improvements to my workflow, my personal favorites being CommitLint and the new app Logging System."
						}
					},
					{
						"id": "SphZajfOFw",
						"type": "header",
						"data": {
							"text": "CommitLint",
							"level": 3
						}
					},
					{
						"id": "NcdhwXiLZY",
						"type": "paragraph",
						"data": {
							"text": "<a target=\"_blank\" href=\"https://commitlint.js.org/#/\">CommitLint</a> is a library that enforces strict rules on your commits, ensuring that they all adhere to your specified conventions (my choice being the Angular commit conventions). Not only does this make commit logs more useful, but it makes automatically bumping app versions and generating changelogs much easier."
						}
					},
					{
						"id": "y8uWUeiDij",
						"type": "header",
						"data": {
							"text": "New Logging System",
							"level": 3
						}
					},
					{
						"id": "fMw5MAP9rc",
						"type": "paragraph",
						"data": {
							"text": "Recently I finished a different project, <a target=\"_blank\" href=\"https://github.com/Tormak9970/bash-shortcuts\">Bash Shortcuts</a>, and in the process of working on it I made a rather robust logging system for both the frontend and backend. This was invaluable on many occasions, so I decided to implemented a similar system into the Steam Art Manager. However, it has been designed in such a way that it should be easily integrated into any future Tauri app I create. The system allows logging at various levels (info, warning, and error), passing parameters, and denotes if a log came from the frontend or backend."
						}
					},
					{
						"id": "ZaHPZ5ACPc",
						"type": "header",
						"data": {
							"text": "Rust Centric Mindset",
							"level": 3
						}
					},
					{
						"id": "bBmvxf5bC0",
						"type": "paragraph",
						"data": {
							"text": "In the past I have always avoided having logic written in Rust in my Tauri projects. I didn't feel comfortable enough with the language, and never found the time to remedy that. However, when I made the logging system for this project I knew I needed to learn Rust, so I did. This came in handy a few times, as there are a couple of operations the app does that take at least 5 seconds in TypeScript, but in Rust can be done in under 1 second. This is such a huge difference for users, and is a lesson I will remember when working on future projects."
						}
					},
					{
						"id": "c2yqvtpA8j",
						"type": "header",
						"data": {
							"text": "Component Updates",
							"level": 3
						}
					},
					{
						"id": "I9L0HdJFKL",
						"type": "paragraph",
						"data": {
							"text": "When making this project, I realized that, while the UI style I typically use is nice, it can be a bit clunky when more complex UI designs are needed. Because of this, I decided to modernize the look, and make it more flexible. I also standardized the parameters for all of my UI components, and added two new ones: a search bar and a tab view."
						}
					},
					{
						"id": "HrGf3MSNfI",
						"type": "header",
						"data": {
							"text": "Auto Updates for Projects",
							"level": 3
						}
					},
					{
						"id": "14Wa9F2uoD",
						"type": "paragraph",
						"data": {
							"text": "As this is the first project of mine that I feel has the potential to garner a decent userbase, I finally decided to look into how to set up automatic updates for Tauri apps. It boiled down to either having a server or a static .json file hosted somewhere that indicates the most recent release and where to download it. I choose the static json file as I was able to integrate it into my build pipeline, so no hosting fees are required."
						}
					},
					{
						"id": "zXSl2ZnKgn",
						"type": "header",
						"data": {
							"text": "GitHub Actions",
							"level": 3
						}
					},
					{
						"id": "06RegVZGyM",
						"type": "paragraph",
						"data": {
							"text": "On the topic of build pipelines, I fell into the infuriating rabbit-hole that is GitHub Actions. These workflows allow you to automate nearly anything, but are a massive pain to test and debug. My goal was to set up a build pipeline that would do the following:"
						}
					},
					{
						"id": "yHnFXBXUzd",
						"type": "list",
						"data": {
							"style": "ordered",
							"items": [
								{
									"content": "Generate a changelog from commits since the last release",
									"items": []
								},
								{
									"content": "If there are new features, bump the feature version (1.x.0), otherwise bump the bug fix version (1.0.x).",
									"items": []
								},
								{
									"content": "Create a release draft with the changelog and new version",
									"items": []
								},
								{
									"content": "Build the application for both Windows and Linux",
									"items": []
								},
								{
									"content": "Add the installers to the release",
									"items": []
								},
								{
									"content": "Generate a new .json file for the updater to check",
									"items": []
								},
								{
									"content": "Publish the new release",
									"items": []
								}
							]
						}
					},
					{
						"id": "gumhsI-zbP",
						"type": "paragraph",
						"data": {
							"text": "I did finally manage to get the pipeline working, but it took almost 80 workflow runs to get to that point. Definitely worth it, but a struggle nonetheless."
						}
					},
					{
						"id": "YxNYz6qID4",
						"type": "header",
						"data": {
							"text": "Update v2.6.3",
							"level": 2
						}
					},
					{
						"id": "eaSLstbwLh",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "puyWNGP8-9",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added check for logoPosition property when loading logo configs",
									"items": []
								},
								{
									"content": "added header to manual game list",
									"items": []
								},
								{
									"content": "logo positions no longer breaks saving when removed",
									"items": []
								},
								{
									"content": "settings modal now closes properly",
									"items": []
								},
								{
									"content": "selected sgdb game properly reset on game change",
									"items": []
								},
								{
									"content": "steam not installed warning now displays correctly",
									"items": []
								}
							]
						}
					},
					{
						"id": "b7Jmhixysn",
						"type": "header",
						"data": {
							"text": "Update v2.6.0",
							"level": 2
						}
					},
					{
						"id": "dU-GvRrKKp",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "9H7wAP1N1l",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added chocolatey package",
									"items": []
								},
								{
									"content": "added confirmation dialog to reload button",
									"items": []
								},
								{
									"content": "added grid cleaning",
									"items": []
								},
								{
									"content": "added panic capture to logging",
									"items": []
								},
								{
									"content": "added timeouts to all http requests",
									"items": []
								},
								{
									"content": "added timeouts to all grid image fetching",
									"items": []
								},
								{
									"content": "added window position persistance",
									"items": []
								},
								{
									"content": "added manual game manager",
									"items": []
								}
							]
						}
					},
					{
						"id": "hMUc9qDxhi",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "AbBmnenFRW",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "duplicate games are now detected on load",
									"items": []
								},
								{
									"content": "settings manager moved to a modal for consistency",
									"items": []
								}
							]
						}
					},
					{
						"id": "prEJF9XCK8",
						"type": "paragraph",
						"data": {
							"text": "Build Pipeline Improvements:"
						}
					},
					{
						"id": "m31Vt93Ssq",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "pipeline improvements now included in releases",
									"items": []
								},
								{
									"content": "release assets no longer have version tied to their file names",
									"items": []
								}
							]
						}
					},
					{
						"id": "s0x1iIQsV9",
						"type": "header",
						"data": {
							"text": "Update v2.5.0",
							"level": 2
						}
					},
					{
						"id": "3mvA8GJrR4",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "dYRJGRNoU3",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added connectivity check to the Linux installer",
									"items": []
								},
								{
									"content": "added Linux uninstaller and uninstall shortcuts",
									"items": []
								}
							]
						}
					},
					{
						"id": "EjIQgPKE4i",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "0tiisr-x3K",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "footer tooltips now make more sense",
									"items": []
								},
								{
									"content": "installer no longer messes up version number",
									"items": []
								},
								{
									"content": "linux installer no longer errors",
									"items": []
								}
							]
						}
					},
					{
						"id": "4kqzI3FQ70",
						"type": "header",
						"data": {
							"text": "Update v2.4.0",
							"level": 2
						}
					},
					{
						"id": "jOK4kF3bdW",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "bGPbKh6K5X",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added check for Steam installation",
									"items": []
								},
								{
									"content": "now checks if there is at least one user",
									"items": []
								},
								{
									"content": "Linux installer now creates desktop and start menu shortcuts",
									"items": []
								}
							]
						}
					},
					{
						"id": "U-vaRQnGjp",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "3N3_mO8udh",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added check for malformed userconfig",
									"items": []
								}
							]
						}
					},
					{
						"id": "aYqlLAPseK",
						"type": "header",
						"data": {
							"text": "Update v2.3.0",
							"level": 2
						}
					},
					{
						"id": "90Nl52l94y",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "tN8_PEpOZO",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added logo config support to import and export",
									"items": []
								},
								{
									"content": "added reset logo position button",
									"items": []
								},
								{
									"content": "changed footer buttons to icons with tooltips",
									"items": []
								},
								{
									"content": "logo positions are loaded only if they exist",
									"items": []
								},
								{
									"content": "major overhaul of logging format",
									"items": []
								}
							]
						}
					},
					{
						"id": "baTGiR8nXU",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "1brzp1ZD2J",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "dropdown arrow no longer bugs out on game switch",
									"items": []
								},
								{
									"content": "dropdowns are no longer bugged when closing",
									"items": []
								},
								{
									"content": "images are no longer draggable",
									"items": []
								},
								{
									"content": "reload now relaunches the entire app",
									"items": []
								},
								{
									"content": "removing logos deletes the correct files",
									"items": []
								},
								{
									"content": "selected sgdb game persists when switching grid type",
									"items": []
								},
								{
									"content": "steam api keys are now loaded properly",
									"items": []
								}
							]
						}
					},
					{
						"id": "d3dnTlNIJ_",
						"type": "header",
						"data": {
							"text": "Update v2.1.2",
							"level": 2
						}
					},
					{
						"id": "0_YPac5d3J",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "l520M33ZXX",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "non steam games are loading properly again",
									"items": []
								},
								{
									"content": "shortcut icons now load and save properly",
									"items": []
								},
								{
									"content": "platform switching side effects fixed",
									"items": []
								},
								{
									"content": "shortcut icons now point to the correct location",
									"items": []
								}
							]
						}
					},
					{
						"id": "cvX-gqzi9O",
						"type": "header",
						"data": {
							"text": "Update v2.1.0",
							"level": 2
						}
					},
					{
						"id": "bAMvSMRm8J",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "NRo6SLMfto",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added game name tooltips on hover",
									"items": []
								},
								{
									"content": "added single instance inforcement",
									"items": []
								},
								{
									"content": "clear grids now displays only if game has grids",
									"items": []
								},
								{
									"content": "added global error failsafe to frontend",
									"items": []
								}
							]
						}
					},
					{
						"id": "MLCQcxP-_D",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "Xj9-9FncdF",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "clearing grids no longer erases image in UI",
									"items": []
								},
								{
									"content": "fixed loading if game selected on key change",
									"items": []
								},
								{
									"content": "theme state now properly saved and loaded",
									"items": []
								},
								{
									"content": "webp images are now properly applied",
									"items": []
								}
							]
						}
					},
					{
						"id": "tbEYp71vGH",
						"type": "header",
						"data": {
							"text": "Update v2.0.0",
							"level": 2
						}
					},
					{
						"id": "3slZvF_d01",
						"type": "paragraph",
						"data": {
							"text": "Features:"
						}
					},
					{
						"id": "9goTwJAwTZ",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "added the ability to change the current steam user",
									"items": []
								},
								{
									"content": "added the ability to discard changes per game",
									"items": []
								},
								{
									"content": "added animated download indicator to grids",
									"items": []
								},
								{
									"content": "added full support for non steam games",
									"items": []
								},
								{
									"content": "added grid preview modals",
									"items": []
								},
								{
									"content": "added message when attempting to quit without saving",
									"items": []
								},
								{
									"content": "added notes icon to grids",
									"items": []
								},
								{
									"content": "added reload button to footer",
									"items": []
								},
								{
									"content": "animated images only animate when hovered",
									"items": []
								},
								{
									"content": "ctrl+f now navigates to the app's search bar",
									"items": []
								},
								{
									"content": "added sgdb selection for steam games",
									"items": []
								},
								{
									"content": "grid type is now always shown",
									"items": []
								},
								{
									"content": "added lightmode for haters",
									"items": []
								},
								{
									"content": "added loading games via localconfig",
									"items": []
								},
								{
									"content": "added non steam game import/export",
									"items": []
								}
							]
						}
					},
					{
						"id": "JnYc43I-nN",
						"type": "paragraph",
						"data": {
							"text": "Fixes:"
						}
					},
					{
						"id": "4wnjXZN1DA",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "apngs now download properly",
									"items": []
								},
								{
									"content": "app no longer takes ages to load (caused by persisted-scope mem leak)",
									"items": []
								},
								{
									"content": "app now loads on launch without interaction",
									"items": []
								},
								{
									"content": "app now retries online test multiple times",
									"items": []
								},
								{
									"content": "appinfo reading is faster and more reliable",
									"items": []
								},
								{
									"content": "changes now apply after multiple saves",
									"items": []
								},
								{
									"content": "filters now work properly",
									"items": []
								},
								{
									"content": "grids now save for games previously without them",
									"items": []
								},
								{
									"content": "ico images now properly render",
									"items": []
								},
								{
									"content": "logo and icon images now preview properly",
									"items": []
								},
								{
									"content": "numbers no longer look terrible",
									"items": []
								},
								{
									"content": "settings now load properly",
									"items": []
								},
								{
									"content": "strings no longer get malformed when read",
									"items": []
								}
							]
						}
					},
					{
						"id": "MVS4ipoKoC",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "4bcu4fcigk",
						"type": "paragraph",
						"data": {
							"text": "The main reason I decided to make this project was I discovered the <a target=\"_blank\" href=\"https://github.com/SteamGridDB/steam-rom-manager\">Steam Rom Manager</a>, and wanted a tool that was similar but for my Steam library. I thought this would also be a great opportunity to finally start learning the Rust language (as is used as the backend for Tauri apps). Additionally, I wanted to build my first project that was cross platform (in this case, just Windows and Linux)."
						}
					},
					{
						"id": "nj8SZDo68x",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "wmuBW-sU7M",
						"type": "paragraph",
						"data": {
							"text": "Looking back, I was able to create exactly what I set out to do and more. The tool allows users to browse their Steam games and set the various types of art for each game, either with their own images or images from <a target=\"_blank\" href=\"https://steamgriddb.com\">https://steamgriddb.com</a>. I also learned a lot about Rust, and I have been blown away by its performance and ease of use. Lastly, I got the chance to familiarize myself with GitHub Actions. They were a huge pain to get up and running, but now that they are, I can automatically generate changelogs and releases for Steam Art Manager when I make changes."
						}
					}
				],
				"version": "2.27.0"
			},
			"link": "https://github.com/Tormak9970/Steam-Art-Manager",
			"isRelative": false,
			"img": "./img/projs/final-sarm-ui.png",
			"org": "none"
		},
		"css-loader-for-vs-code": {
			"category": "miscellaneous",
			"name": "CSS Loader for VS Code",
			"time": "20 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "CSS Loader for VS Code is a Visual Studio Code extension that adds intellisense support and file icons to CSS Loader theme.json files. This makes it easier to catch mistakes, as well as improves the developer experience when making themes.",
			"content": {
				"time": 1693399735329,
				"blocks": [
					{
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "CSS Loader for VS Code is a Visual Studio Code extension that adds intellisense support and file icons to CSS Loader theme.json files. This makes it easier to catch mistakes, as well as improves the developer experience when making themes."
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Design Process",
							"level": 2
						}
					},
					{
						"type": "paragraph",
						"data": {
							"text": "Making the actual extension wasn't all that difficult. While the VS Code API docs are less then sub-par, I was able to create the file icon association and custom JSON Schema relatively quickly. The complexity of this project came from having to deal with Microsoft Azure and the VS Code marketplace. Both had issues when run in certain browsers, as well as being finnicky overall, however now that they are set up"
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to create a VS Code extension",
									"items": []
								},
								{
									"content": "Wanted to alleviate repeated questions I received on the theme.json spec",
									"items": []
								},
								{
									"content": "Wanted to speed up CSS Loader theme development",
									"items": []
								}
							]
						}
					},
					{
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Now have experience making extensions for VSCode",
									"items": []
								},
								{
									"content": "Now have experience making JSON Schemas",
									"items": []
								},
								{
									"content": "Got acquainted with how Azure DevOps and the VS Code marketplace work",
									"items": []
								},
								{
									"content": "Updated my custom changelog GitHub action to also write to a changelog file",
									"items": []
								},
								{
									"content": "Learned how to schedule automatic update checks with GitHub actions",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.19.3"
			},
			"link": "https://marketplace.visualstudio.com/items?itemName=DeckThemes.css-loader-for-vs-code",
			"isRelative": false,
			"img": "./img/projs/css-loader-for-vs-code.png",
			"org": "none"
		}
	},
	"archive": {
		"slicers-gui": {
			"category": "software-engineering",
			"name": "Slicers GUI",
			"time": "430+ hours",
			"status": "Complete",
			"difficulty": "Complexed",
			"description": "This is by far the project I am the most proud of. It is the culmination of a lot of work by both me and the SWTOR Slicers community, and the result is a truly unique piece of software that serves its purpose well. The idea behind making it was to optimize and improve all existing tools, and bundle them all into one cohesive, fully customizable application.",
			"content": {
				"time": 1675718683291,
				"blocks": [
					{
						"id": "6rSLg_atGs",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "Lx6r8GlO94",
						"type": "paragraph",
						"data": {
							"text": "This is by far the project I am the most proud of. It is the culmination of a lot of work by both me and the SWTOR Slicers community, and the result is a truly unique piece of software that serves its purpose well. The idea behind making it was to optimize and improve all existing tools, and bundle them all into one cohesive, fully customizable application."
						}
					},
					{
						"id": "5rNtDDFBGz",
						"type": "header",
						"data": {
							"text": "Updates",
							"level": 2
						}
					},
					{
						"id": "RseKw1a0eq",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Switched locator to NPM package",
									"items": []
								},
								{
									"content": "Added support for all SWTOR NPC types",
									"items": []
								},
								{
									"content": "Updated the extraction presets to be more dynamic",
									"items": []
								}
							]
						}
					},
					{
						"id": "rCYqP-GvHT",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "hPvtdTw4mr",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I wanted to make an application, because I had never done that before",
									"items": []
								},
								{
									"content": "I was sick of all the default C# UIs on the existing tools",
									"items": []
								},
								{
									"content": "I wanted to make improvements to a lot of the existing tools because they were not nearly as efficient as the could be",
									"items": []
								}
							]
						}
					},
					{
						"id": "AYxAPU5RS0",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "16uDzqC2VL",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "How to make apps using the Electron.js framework",
									"items": []
								},
								{
									"content": "Learned the GO programming language",
									"items": []
								},
								{
									"content": "How to write native code and run it in process using Edge.js",
									"items": []
								},
								{
									"content": "How to take advantage of offloading tasks to web workers",
									"items": []
								},
								{
									"content": "How to effectively run a beta test and implement user feedback",
									"items": []
								},
								{
									"content": "How to create a good UX (user experience)",
									"items": []
								},
								{
									"content": "How to effectively pass data between different parts of an application, without compromising on performance",
									"items": []
								}
							]
						}
					},
					{
						"id": "BIIC3nLKZ6",
						"type": "paragraph",
						"data": {
							"text": "This is a long term project, so I am sure I will continue to learn from it"
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/SWTOR-Slicers/Slicers-GUI",
			"isRelative": false,
			"img": "./img/projs/Slicers GUI.png",
			"org": "swtor-slicers"
		},
		"three.js-marching-cubes": {
			"category": "web-dev",
			"name": "Three.js Marching Cubes",
			"time": "11 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "The Marching Cubes is a well known algorithm often used in games for terrain generation. The premise is it generates polygons based on weights applied to each vertex of the bounding cube. I have always found this algorithm interesting, so I decided to recreate it using TypeScript and one of my favorite libraries, Three.js.",
			"content": {
				"time": 1675718380122,
				"blocks": [
					{
						"id": "GUU5idVR6z",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "wlomAPoJbT",
						"type": "paragraph",
						"data": {
							"text": "The Marching Cubes is a well known algorithm often used in games for terrain generation. The premise is it generates polygons based on weights applied to each vertex of the bounding cube. I have always found this algorithm interesting, so I decided to recreate it using TypeScript and one of my favorite libraries, Three.js."
						}
					},
					{
						"id": "cPdy9Ap83z",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "xMyEqCE1rv",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I wanted to recreate the Marching Cubes algorithm using Three.js and Typescript",
									"items": []
								},
								{
									"content": "I wanted to refamiliarize myself with Three.js",
									"items": []
								}
							]
						}
					},
					{
						"id": "V_Xx5nYkSh",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "l2G2fYd8ak",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I learned useful strategies for optimizing Three.js applications",
									"items": []
								},
								{
									"content": "I was able to recreate the algorithm",
									"items": []
								},
								{
									"content": "I was able to refresh my memory on Three.js",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://marching-cubes.travislane.dev/",
			"isRelative": false,
			"img": "./img/projs/threejs-marching-cubes.png",
			"org": "none"
		},
		"swtorslicers.org": {
			"category": "web-dev",
			"name": "swtorslicers.org",
			"time": "38 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "Components",
			"content": {
				"time": 1675718420130,
				"blocks": [
					{
						"id": "5yG04KIu_B",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "yEN2XzRlhf",
						"type": "header",
						"data": {
							"text": "Components",
							"level": 3
						}
					},
					{
						"id": "TkOJXFsF5j",
						"type": "header",
						"data": {
							"text": "Home Page",
							"level": 4
						}
					},
					{
						"id": "40GEPTpZVB",
						"type": "image",
						"data": {
							"file": {
								"url": "https://asset.localhost/C%3A%5CUsers%5CTorma%5CDocuments%5CGithub%5Cportfolio-site-v2%5Cpublic%5Cimg%5Cprojs%5Cslicers-org.png",
								"webUrl": "./img/projs/slicers-org.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "04sESMpuoO",
						"type": "paragraph",
						"data": {
							"text": "This component of the website is a quick overview of the organization and our main tools."
						}
					},
					{
						"id": "-qKjqKx_Z6",
						"type": "header",
						"data": {
							"text": "Frequently Asked Questions",
							"level": 4
						}
					},
					{
						"id": "TcSsYut9HS",
						"type": "image",
						"data": {
							"file": {
								"url": "https://asset.localhost/C%3A%5CUsers%5CTorma%5CDocuments%5CGithub%5Cportfolio-site-v2%5Cpublic%5Cimg%5Cprojs%5Cslicers-faq.png",
								"webUrl": "./img/projs/slicers-faq.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "F_QSR1lrMF",
						"type": "paragraph",
						"data": {
							"text": "The FAQ component covers the questions we get asked on a regularly."
						}
					},
					{
						"id": "aeoB3-o9Tq",
						"type": "header",
						"data": {
							"text": "Wiki",
							"level": 4
						}
					},
					{
						"id": "mxoFgWEgfI",
						"type": "image",
						"data": {
							"file": {
								"url": "https://asset.localhost/C%3A%5CUsers%5CTorma%5CDocuments%5CGithub%5Cportfolio-site-v2%5Cpublic%5Cimg%5Cprojs%5Cslicers-wiki.png",
								"webUrl": "./img/projs/slicers-wiki.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "nkvVvnRjIH",
						"type": "paragraph",
						"data": {
							"text": "The last component is the wiki. This will serve as a replacement for our GitHub wiki once we get everything migrated over."
						}
					},
					{
						"id": "qbMTucXH-t",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "xmmgZmTMQf",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to create a place for all of the information about the organization to be easily accessible",
									"items": []
								},
								{
									"content": "Wanted to shift our organization's wiki off of GitHub",
									"items": []
								},
								{
									"content": "Wanted to make our wiki available offline",
									"items": []
								},
								{
									"content": "I wanted to look into how to make a Progressive Web App (PWA)",
									"items": []
								}
							]
						}
					},
					{
						"id": "XbqJ1h3Mdb",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "PtY85p-Cl2",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Was able to create a website that represents the SWTOR Slicers, and provides all the information about us",
									"items": []
								},
								{
									"content": "Created a simple wiki system that covers all of our needs",
									"items": []
								},
								{
									"content": "Learned the basics of how to make a PWA",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://swtorslicers.org",
			"isRelative": false,
			"img": "./img/projs/slicers-org.png",
			"org": "swtor-slicers"
		},
		"torc-npc-3d-viewers": {
			"category": "web-dev",
			"name": "TORC NPC 3D Viewers",
			"time": "10 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "This project came about as a natural continuation of the TORCommunity Character Designer. It is a 3D viewer for loading the models for different NPC (non player characters) from Star Wars: The Old Republic. It uses a very similar process to the character designer for loading the models, but this time has to take a dynamic input specified on page load.",
			"content": {
				"time": 1675718713922,
				"blocks": [
					{
						"id": "Q2BIPEDC4a",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "x5s66HjOkz",
						"type": "paragraph",
						"data": {
							"text": "This project came about as a natural continuation of the TORCommunity Character Designer. It is a 3D viewer for loading the models for different NPC (non player characters) from Star Wars: The Old Republic. It uses a very similar process to the character designer for loading the models, but this time has to take a dynamic input specified on page load."
						}
					},
					{
						"id": "CWdJL0lesi",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "gsTNO3IyDV",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Natural continuation of my previous project, the Character Designer",
									"items": []
								},
								{
									"content": "Was a request feature for the TORCommunity website",
									"items": []
								},
								{
									"content": "One of the other fan sites, JediPedia, had a similar feature that was never flushed out",
									"items": []
								},
								{
									"content": "Wanted to refine my methods for loading and rendering models",
									"items": []
								}
							]
						}
					},
					{
						"id": "Pjs3r6ob5T",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "09fYNY-f6o",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I know how to load models more efficiently",
									"items": []
								},
								{
									"content": "The rendering process I use in a variety of projects is more refined",
									"items": []
								},
								{
									"content": "I was able to design a product that had been requested by people for a few years in a short amount of time",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://torcommunity.com/database/search/npc",
			"isRelative": false,
			"img": "./img/projs/torc-npc-viewer.png",
			"org": "torcommunity"
		},
		"wiki-editor": {
			"category": "software-engineering",
			"name": "Wiki Editor",
			"time": "42 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "I had the idea for this project after I started working on a website for the SWTOR Slicers. We wanted to transition from using GitHub's wiki system to using our own on the new website, and so I had the idea to make an app for creating, editing, and deleting wiki articles. The app uses similar principles to my Portfolio Updater app, but is written using the Electron framework.",
			"content": {
				"time": 1675718726363,
				"blocks": [
					{
						"id": "8pyZwk6oS7",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "ADh_1Tm5wQ",
						"type": "paragraph",
						"data": {
							"text": "I had the idea for this project after I started working on a website for the SWTOR Slicers. We wanted to transition from using GitHub's wiki system to using our own on the new website, and so I had the idea to make an app for creating, editing, and deleting wiki articles. The app uses similar principles to my Portfolio Updater app, but is written using the Electron framework."
						}
					},
					{
						"id": "3ZPku9LDei",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "oM8XyPiqaC",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Needed a way to efficiently manage wiki articles for the SWTOR Slicers website.",
									"items": []
								},
								{
									"content": "Wanted to continue learning about the Svelte library",
									"items": []
								}
							]
						}
					},
					{
						"id": "_2UutP1Sya",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "rRCzKan6OH",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Was able to create an intuitive app for managing the SWTOR Slicers Wiki",
									"items": []
								},
								{
									"content": "Got to experiment with more advanced svelte components",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/SWTOR-Slicers/Wiki-Editor",
			"isRelative": false,
			"img": "./img/projs/wiki-editor.png",
			"org": "swtor-slicers"
		},
		"tor-model-locator": {
			"category": "software-engineering",
			"name": "Tor Model Locator",
			"time": "23 hours",
			"status": "Complete",
			"difficulty": "Simple",
			"description": "This is a little NPM package that assists the Slicers GUI in locating SWTOR model files from an extraction. Under the hood it is relatively simple, consisting of parsing a JSON file, gathering the needed files, and copying them into a predictable folder structure. This program has gone through 3 different major versions. As a proof of concept I wrote it in python (really easy to iterate with, but not reliable enough for me to choose for production), then I wrote it in GO as an executable bundled with the Slicers GUI. There were no issues with that version, however I would like to migrate the Slicers GUI to an all TS/Rust Tauri app, so I rewrote the program again as an NPM package.",
			"content": {
				"time": 1675718736996,
				"blocks": [
					{
						"id": "abOBSF-Y-V",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "JlFAZonFGs",
						"type": "paragraph",
						"data": {
							"text": "This is a little NPM package that assists the Slicers GUI in locating SWTOR model files from an extraction. Under the hood it is relatively simple, consisting of parsing a JSON file, gathering the needed files, and copying them into a predictable folder structure. This program has gone through 3 different major versions. As a proof of concept I wrote it in python (really easy to iterate with, but not reliable enough for me to choose for production), then I wrote it in GO as an executable bundled with the Slicers GUI. There were no issues with that version, however I would like to migrate the Slicers GUI to an all TS/Rust Tauri app, so I rewrote the program again as an NPM package."
						}
					},
					{
						"id": "dSTF53UYx_",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "WC4TjvMS64",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to keep the program modular (as it can be used on its own)",
									"items": []
								},
								{
									"content": "Wanted to transition to an all TS solution",
									"items": []
								}
							]
						}
					},
					{
						"id": "t2bdyd-tj0",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "_hhvhseABb",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Learned a bit about writing a good ReadMe file",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/Tormak9970/tor-model-locator",
			"isRelative": false,
			"img": "./img/projs/tor-model-locator.png",
			"org": "none"
		},
		"swtor-slicers-wiki": {
			"category": "miscellaneous",
			"name": "SWTOR Slicers Wiki",
			"time": "5 hours",
			"status": "Ongoing",
			"difficulty": "Simple",
			"description": "The SWTOR Slicers Wiki is a collection of guides that serve to help people through the various processes involved in data mining, extraction, and modding. It continues to grow as we add more and more tutorials, and serves as a one stop shop for all things SWTOR Slicers.",
			"content": {
				"time": 1675718752587,
				"blocks": [
					{
						"id": "E2HzszzOTH",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "G6CVmJYP8w",
						"type": "paragraph",
						"data": {
							"text": "The SWTOR Slicers Wiki is a collection of guides that serve to help people through the various processes involved in data mining, extraction, and modding. It continues to grow as we add more and more tutorials, and serves as a one stop shop for all things SWTOR Slicers."
						}
					},
					{
						"id": "rYJ1sS65S5",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "yiDofGrzY_",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "We wanted to have a better way to explain the ins and outs of our community (we previously just had pdfs)",
									"items": []
								},
								{
									"content": "I wanted to organize our guides into a more intuitive design, and provide a place to put documentation of our work.",
									"items": []
								}
							]
						}
					},
					{
						"id": "YJWxdQ6Dih",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "62ldxcP3zW",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "We have a more organized way to present our guides, and a nice place to direct new people",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/SWTOR-Slicers/WikiPedia/wiki",
			"isRelative": false,
			"img": "./img/projs/slicers-wiki.png",
			"org": "swtor-slicers"
		},
		"tetris": {
			"category": "web-games",
			"name": "Tetris",
			"time": "30 hours",
			"status": "Complete",
			"difficulty": "Complexed",
			"description": "For my last classic game project, I wanted to do something much more complexed. I decided to do Tetris, as it is one of my favorite games, and had a lot of complexed elements. It took much longer then the previous three projects, but was very satisfying to finish.",
			"content": {
				"time": 1675718765177,
				"blocks": [
					{
						"id": "w2NLjrsOZr",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "eRDQjgQL3e",
						"type": "paragraph",
						"data": {
							"text": "For my last classic game project, I wanted to do something much more complexed. I decided to do Tetris, as it is one of my favorite games, and had a lot of complexed elements. It took much longer then the previous three projects, but was very satisfying to finish."
						}
					},
					{
						"id": "9BD101MWmx",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "3GNMw55XkZ",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to finish of my web game projects with something that was more complicated",
									"items": []
								},
								{
									"content": "Wanted to practice and advance my javascript knowledge",
									"items": []
								},
								{
									"content": "Tetris has <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://tetris.fandom.com/wiki/Tetris_Guideline\" target=\"_blank\">guidelines</a> you need to follow if you are going to publish it under the Tetris name, and I thought it would be good practice to make a project with specifications I also needed to meet",
									"items": []
								}
							]
						}
					},
					{
						"id": "pwFfpS8MIr",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "q8SU_ZaDaO",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Learned how to better mitigate methods and functions to the most relevant class object",
									"items": []
								},
								{
									"content": "I became comfortable and very familiar with javascript",
									"items": []
								},
								{
									"content": "I met most the required guidelines. (Some were too advanced for me at the time, but I plan to come back and update it to meet them)",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://tetris.travislane.dev",
			"isRelative": false,
			"img": "./img/projs/Tetris.png",
			"org": "none"
		},
		"minesweeper": {
			"category": "web-games",
			"name": "Minesweeper",
			"time": "15 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "Minesweeper is a classic logic based strategy game. As I was learning JavaScript, I thought it would be fun to make one of my favorite classic games using what I was learning. In the process, I learned about the html5 canvas, which is now used instead of flash for web based games and animations. After completing the normal minesweeper, I wanted to add something more advanced to the project. I decided to add animations (inspired by Google' Minesweeper), so I used the html5 canvas API to animate it.",
			"content": {
				"time": 1675718778973,
				"blocks": [
					{
						"id": "fDaKuK9e17",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "SCY6AOLVoo",
						"type": "paragraph",
						"data": {
							"text": "Minesweeper is a classic logic based strategy game. As I was learning JavaScript, I thought it would be fun to make one of my favorite classic games using what I was learning. In the process, I learned about the html5 canvas, which is now used instead of flash for web based games and animations. After completing the normal minesweeper, I wanted to add something more advanced to the project. I decided to add animations (inspired by Google' Minesweeper), so I used the html5 canvas API to animate it."
						}
					},
					{
						"id": "JppKuXin_o",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "YEHt9cZRD6",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to learn how to use the HTML5 canvas",
									"items": []
								},
								{
									"content": "Love Minesweeper, so wanted to make my own version",
									"items": []
								},
								{
									"content": "Wanted to learn more javascript and do some more web development",
									"items": []
								}
							]
						}
					},
					{
						"id": "bJjpWp73MG",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "qO6rJLop7Q",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I was comfortable and familiar with html, css, javascript, and the Canvas API",
									"items": []
								},
								{
									"content": "How to approach a problem from different angles (realized that I would need to use the html5 canvas api if I wanted to make animations)",
									"items": []
								},
								{
									"content": "Learned about recursion",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://minesweeper.travislane.dev",
			"isRelative": false,
			"img": "./img/projs/Minesweeper.png",
			"org": "none"
		},
		"pong": {
			"category": "web-games",
			"name": "Pong",
			"time": "10 hours",
			"status": "Complete",
			"difficulty": "Simple",
			"description": "Keeping with the theme of the previous projects I had just finished, I decided to make a 2 player pong game. This was much more complexed then minesweeper as I needed to update the canvas on key press, as well as slowly increase the ball speed and have collision detection.",
			"content": {
				"time": 1675718787979,
				"blocks": [
					{
						"id": "4APXidhcEF",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "zbG47D4jM7",
						"type": "paragraph",
						"data": {
							"text": "Keeping with the theme of the previous projects I had just finished, I decided to make a 2 player pong game. This was much more complexed then minesweeper as I needed to update the canvas on key press, as well as slowly increase the ball speed and have collision detection."
						}
					},
					{
						"id": "Wc5vaX4R5y",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "APS_pwr7Dk",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to expand my javascript knowledge",
									"items": []
								},
								{
									"content": "Always thought it would be fun to make pong",
									"items": []
								},
								{
									"content": "Wanted to learn more about the HTML5 canvas API",
									"items": []
								}
							]
						}
					},
					{
						"id": "E5c5fBID_B",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "vpp5a3jCJx",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "How to animate multiple objects at a time using canvas",
									"items": []
								},
								{
									"content": "I learned more advanced javascript",
									"items": []
								},
								{
									"content": "How to make a simple UI users could use, and save their options",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://pong.travislane.dev",
			"isRelative": false,
			"img": "./img/projs/Pong.png",
			"org": "none"
		},
		"portfolio-v1": {
			"category": "web-dev",
			"name": "Portfolio V1",
			"time": "25 hours",
			"status": "Not Live / Obsolete",
			"difficulty": "Simple",
			"description": "I wanted to create a professional and classy website that I could use to display all of the projects I create. I think this is a unique and relevant way to display my projects and works in a way that represents me and what I love doing. I continuously update this as I continue to come up with projects and complete them, as well as work on projects ether for school, or one of the organizations I am a part of.",
			"content": {
				"time": 1675718811905,
				"blocks": [
					{
						"id": "W_xuzsjFBt",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "A-p92rIsaH",
						"type": "paragraph",
						"data": {
							"text": "I wanted to create a professional and classy website that I could use to display all of the projects I create. I think this is a unique and relevant way to display my projects and works in a way that represents me and what I love doing. I continuously update this as I continue to come up with projects and complete them, as well as work on projects ether for school, or one of the organizations I am a part of."
						}
					},
					{
						"id": "K9_vhMevvu",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "NGd6jV0Oa6",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I wanted to have a unique way to display all of my projects.",
									"items": []
								},
								{
									"content": "I wanted to display this in a relevant manner to my interests and passions.",
									"items": []
								},
								{
									"content": "I wanted to reflect on what I have learned, and what my takeaways have been.",
									"items": []
								}
							]
						}
					},
					{
						"id": "X4R6J6w249",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "lEwIT0sE2T",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I was able to create a classy, informative website that is simple yet effective.",
									"items": []
								},
								{
									"content": "I now have a nice way to display and represent my projects in a manner I am proud of.",
									"items": []
								},
								{
									"content": "I learned some really interesting tricks you can do with CSS and HTML5 (such as the flip cards I use for project previews).",
									"items": []
								}
							]
						}
					},
					{
						"id": "W6ECctwqi0",
						"type": "header",
						"data": {
							"text": "Components",
							"level": 2
						}
					},
					{
						"id": "-wlFnFy-ew",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "The home page/landing page. This has some information about me, and a list of some of my skills.",
									"items": []
								}
							]
						}
					},
					{
						"id": "hEzD74sdou",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Portfolio site homepage.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "IjsBX05Yah",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "The project category and organization tabs. These contain previews of my projects, based on what category of computer science they fall under.",
									"items": []
								}
							]
						}
					},
					{
						"id": "ND3HRNtExk",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Portfolio site category tab.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "2LsV8tktKJ",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "The third and final component of the website is the project pages themselves. These pages have information about each project, including: an overview, reasons for and purpose of the project, and the outcome of the project.",
									"items": []
								}
							]
						}
					},
					{
						"id": "-JYdHcMe6c",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Portfolio site project tab.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "web-dev",
			"isRelative": false,
			"img": "./img/projs/Portfolio site homepage.png",
			"org": "none"
		},
		"intro-to-web-dev-camp": {
			"category": "education",
			"name": "Intro to web dev camp",
			"time": "30 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "This project was a venture into an area I had absolutely no experience with, teaching. I had the idea to make the camp because my school gave me the opportunity to get into computer science, and I wanted to offer others that opportunity as well. I also saw the camp as a great way to solidify my understanding of web development.",
			"content": {
				"time": 1675718827978,
				"blocks": [
					{
						"id": "Niwf8E7hGX",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "sDg2kIdR_h",
						"type": "paragraph",
						"data": {
							"text": "This project was a venture into an area I had absolutely no experience with, teaching. I had the idea to make the camp because my school gave me the opportunity to get into computer science, and I wanted to offer others that opportunity as well. I also saw the camp as a great way to solidify my understanding of web development."
						}
					},
					{
						"id": "MVneFqfcim",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "zHTrKuxW3H",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I wanted to give back to my school for giving me the chance to get into computer science",
									"items": []
								},
								{
									"content": "I wanted to give others the same chance I had to discover a passion and talent they didn't know they had.",
									"items": []
								},
								{
									"content": "I wanted to make sure I understood the fundamentals of web development before moving on to more advanced concepts",
									"items": []
								}
							]
						}
					},
					{
						"id": "aDmAwZu4Ag",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "f3QSRYGcbm",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "I solidified my understanding of the fundamentals of web development",
									"items": []
								},
								{
									"content": "I had the opportunity to share my love of programming with others, and inspire them to continue learning",
									"items": []
								},
								{
									"content": "I learned how to efficiently summarize and present data in a way people can comprehend",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "",
			"isRelative": false,
			"img": "./img/projs/intro-to-web-dev-camp.png",
			"org": "none"
		},
		"slicers-blender-importer": {
			"category": "miscellaneous",
			"name": "Slicers Blender Importer",
			"time": "15 hours",
			"status": "Complete",
			"difficulty": "Moderate-Complexed",
			"description": "The blender importer was very different before I started making changes. I added multi file importing, as well as one click imports. The one click imports work with the TORC Character Designer and my Locator tool to import all models and materials for a given SWTOR character, allowing artists to get right to making art.",
			"content": {
				"time": 1675718965273,
				"blocks": [
					{
						"id": "k3nSWJlJ69",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "qYiXnsE3Nw",
						"type": "paragraph",
						"data": {
							"text": "The blender importer was very different before I started making changes. I added multi file importing, as well as one click imports. The one click imports work with the TORC Character Designer and my Locator tool to import all models and materials for a given SWTOR character, allowing artists to get right to making art."
						}
					},
					{
						"id": "2FvZcjWoOA",
						"type": "header",
						"data": {
							"text": "Updates",
							"level": 2
						}
					},
					{
						"id": "TqYufwokBg",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Added support for all SWTOR NPC types",
									"items": []
								}
							]
						}
					},
					{
						"id": "Hfb11vexVb",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "rWIKyKfauv",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to help contribute to the organization",
									"items": []
								},
								{
									"content": "People had been asking for multi model importing for a while",
									"items": []
								},
								{
									"content": "I wanted to automate the last piece of the process, as I had already done the first two",
									"items": []
								}
							]
						}
					},
					{
						"id": "IyUtn1ErXZ",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "VJFplbo3Vx",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Was able to meet people's requests for multi file importing",
									"items": []
								},
								{
									"content": "I was able to fully automate the importing process, taking a nearly 2 hour process and making it take 20 seconds",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/SWTOR-Slicers/Granny2-Plug-In-Blender-2.8x",
			"isRelative": false,
			"img": "./img/projs/slicers-blender-importer.png",
			"org": "swtor-slicers"
		},
		"hex-world-generator": {
			"category": "blender",
			"name": "Hex World Generator",
			"time": "12 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "I started this project after coming across a video about how to make the base of the project (the hex shaped grid). Thought it looked interesting so I made it, and added decorations to the different areas.",
			"content": {
				"time": 1675718475541,
				"blocks": [
					{
						"id": "188dV-mqHY",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "5YqHZbPaez",
						"type": "paragraph",
						"data": {
							"text": "I started this project after coming across a video about how to make the base of the project (the hex shaped grid). Thought it looked interesting so I made it, and added decorations to the different areas."
						}
					},
					{
						"id": "3W4r39t6v9",
						"type": "header",
						"data": {
							"text": "More Info",
							"level": 2
						}
					},
					{
						"id": "Jx-0bMiBkb",
						"type": "paragraph",
						"data": {
							"text": "The way this project works is through using on of Blender's newer features, Geometry Nodes. These allow you to create 3D models almost 'programmatically'. They can be grouped together to create controller nodes as well, which is what I did for this project. This means someone could edit specific parameters to their liking without having to slog through hundreds of nodes."
						}
					},
					{
						"id": "OCvwhLsC32",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Hex World Controls.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "y814FaNexB",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "8ExJmB_Ye2",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to learn more about how Geometry Nodes worked",
									"items": []
								},
								{
									"content": "Wanted to create a procedural mini world and model some low poly models",
									"items": []
								}
							]
						}
					},
					{
						"id": "rI1_eUEx5E",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "TNsqVl2BGO",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Gained a better understanding of how Blender's Geometry Nodes work",
									"items": []
								},
								{
									"content": "Created a procedurally generated world with low poly decorations",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/Tormak9970/blender-projects",
			"isRelative": false,
			"img": "./img/projs/Hex World.png",
			"org": "none"
		},
		"marching-squares": {
			"category": "blender",
			"name": "Marching Squares",
			"time": "14 hrs",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "The goal of this project was to recreate the Marching Squares algorithm in blender. Marching Squares is a well known computer graphics algorithm used to generate procedural patterns for a multitude of uses, such as terrain in game design.",
			"content": {
				"time": 1675718344285,
				"blocks": [
					{
						"id": "GFzO54o7BQ",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "Ptw2MUCPEY",
						"type": "paragraph",
						"data": {
							"text": "The goal of this project was to recreate the Marching Squares algorithm in blender. Marching Squares is a well known computer graphics algorithm used to generate procedural patterns for a multitude of uses, such as terrain in game design."
						}
					},
					{
						"id": "VbytCdOa6Q",
						"type": "header",
						"data": {
							"text": "More Info",
							"level": 2
						}
					},
					{
						"id": "oNGk8ZK9PK",
						"type": "paragraph",
						"data": {
							"text": "While it may not be very complicated to create marching squares through programming, Blender's Geometry Nodes are another story entirely. Because of how geometry nodes work, there is no looping or re-using data in the typical programming sense. Data is, in most cases, computed based on where it is called from (more info can be found about that <a target=\"_blank\" href=\"https://docs.blender.org/manual/en/latest/modeling/geometry_nodes/fields.html\">here</a>). This made recreating marching squares significantly more complicated. The image below is what the logic for this project looks like (normally I use node groups to make working on it possible, this is what it looks like without them):"
						}
					},
					{
						"id": "1L2CMoEKDp",
						"type": "image",
						"data": {
							"file": {
								"url": "./img/projs/Marching Squares inner.png"
							},
							"caption": "",
							"withBorder": false,
							"stretched": false,
							"withBackground": false
						}
					},
					{
						"id": "qLwVgR_0xk",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "EDSYKuORGB",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to create a geometry nodes implementation of marching squares",
									"items": []
								}
							]
						}
					},
					{
						"id": "Ne9x4Lvo6L",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "0ug6cJpzz3",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Gained a better understanding of how to solve problems with geometry nodes",
									"items": []
								},
								{
									"content": "Have a better understanding of how geometry nodes work internally",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/Tormak9970/blender-projects",
			"isRelative": false,
			"img": "./img/projs/Marching Squares in Blender.png",
			"org": "none"
		},
		"tweakpane-gradient-plugin": {
			"category": "web-dev",
			"name": "Tweakpane Gradient Plugin",
			"time": "6 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "I started this project because I had been using the Tweakpane library for editable parameters in another project, and needed a gradient texture input. The layout and controls are based on Blender's color ramp node, which node, which does something similar. The plugin allows the user to edit the stop position and color for the gradient, and then outputs an ImageData object with the consequent texture.",
			"content": {
				"time": 1675718368657,
				"blocks": [
					{
						"id": "QExxjEfEMq",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "CKN0Yktxl4",
						"type": "paragraph",
						"data": {
							"text": "I started this project because I had been using the Tweakpane library for editable parameters in another project, and needed a gradient texture input. The layout and controls are based on Blender's color ramp node, which node, which does something similar. The plugin allows the user to edit the stop position and color for the gradient, and then outputs an ImageData object with the consequent texture."
						}
					},
					{
						"id": "QaV7pBHTdv",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "1FRJ0qdqnz",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Needed a Tweakpane compatible gradient generator",
									"items": []
								}
							]
						}
					},
					{
						"id": "nW0C8tES70",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "BhGZAGTjU8",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Created a plugin that allows the user to customize gradient textures",
									"items": []
								},
								{
									"content": "First introduction to the MVC design pattern",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://github.com/Tormak9970/tweakpane-plugin-gradient",
			"isRelative": false,
			"img": "./img/projs/tweakpane-plugin-gradient.png",
			"org": "none"
		},
		"tiled-wave-function-collapse": {
			"category": "web-dev",
			"name": "Tiled Wave Function Collapse",
			"time": "8 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "The wave function collapse algorithm is an algorithm used to generate images and 3D models using either a sample input or a set of tiles with rules determining how they connect. I love procedural generation, and when I stumbled across the GitHub <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://github.com/mxgmn/WaveFunctionCollapse\">repository</a>&nbsp;for the original implementation, I knew I needed to try it myself. I focused on the tiled version, since it was more intuitive to start.",
			"content": {
				"time": 1668886721798,
				"blocks": [
					{
						"id": "aQTC3zqwqP",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "7Qeyl4YpTz",
						"type": "paragraph",
						"data": {
							"text": "The wave function collapse algorithm is an algorithm used to generate images and 3D models using either a sample input or a set of tiles with rules determining how they connect. I love procedural generation, and when I stumbled across the GitHub <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"https://github.com/mxgmn/WaveFunctionCollapse\">repository</a>&nbsp;for the original implementation, I knew I needed to try it myself. I focused on the tiled version, since it was more intuitive to start."
						}
					},
					{
						"id": "L0HrQjJxVY",
						"type": "paragraph",
						"data": {
							"text": "My initial implementation worked, but would often fail because it would randomly pick a tile and if it didn't work it would restart, instead of trying another. I fixed this by adding a check to make sure that the random value would work, and if it wouldn't try another. This resulted in almost 100% successful attempts."
						}
					},
					{
						"id": "2GvGanFezN",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "aTINhgk4au",
						"type": "paragraph",
						"data": {
							"text": "The main reason for this project was simply my interest in procedural generation."
						}
					},
					{
						"id": "dhWhMG5vhV",
						"type": "header",
						"data": {
							"text": "Conculsion",
							"level": 2
						}
					},
					{
						"id": "3dU09rpjNZ",
						"type": "paragraph",
						"data": {
							"text": "I gained some experience with taking the conceptual description of an algorithm and creating an actual implementation."
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://wave-function-collapse.travislane.dev",
			"isRelative": false,
			"img": "./img/projs/wave-function-collapse.png",
			"org": "none"
		},
		"simple-sudoku": {
			"category": "web-games",
			"name": "Simple Sudoku",
			"time": "35 hours",
			"status": "Complete",
			"difficulty": "Moderate",
			"description": "I came across an article about different ways to approach generating sudoku puzzles and solving them, and it caught my interest. I thought it would be a fun way to work on my web development skills and create a fun end product I could actually put up online. It was very interesting to explore how to not just generate solvable puzzles, but puzzles that look good to the player.",
			"content": {
				"time": 1675718489728,
				"blocks": [
					{
						"id": "Ak6PmaiUqJ",
						"type": "header",
						"data": {
							"text": "Description",
							"level": 2
						}
					},
					{
						"id": "ZAx1af6NrV",
						"type": "paragraph",
						"data": {
							"text": "I came across an article about different ways to approach generating sudoku puzzles and solving them, and it caught my interest. I thought it would be a fun way to work on my web development skills and create a fun end product I could actually put up online. It was very interesting to explore how to not just generate solvable puzzles, but puzzles that look good to the player."
						}
					},
					{
						"id": "3V81lWYhL8",
						"type": "header",
						"data": {
							"text": "Purpose",
							"level": 2
						}
					},
					{
						"id": "rIs3bW3TDZ",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Wanted to practice implementing responsive design",
									"items": []
								},
								{
									"content": "Wanted to explore how to create different themes for a website using plain CSS",
									"items": []
								},
								{
									"content": "Was interested in exploring sudoku board generation and methods of solving",
									"items": []
								},
								{
									"content": "Wanted to create a polished Progressive Web App (PWA)",
									"items": []
								}
							]
						}
					},
					{
						"id": "FJvN-7xpWZ",
						"type": "header",
						"data": {
							"text": "Conclusion",
							"level": 2
						}
					},
					{
						"id": "dDU_V6jNCL",
						"type": "list",
						"data": {
							"style": "unordered",
							"items": [
								{
									"content": "Came up with a simple strategy for implementing themes into websites",
									"items": []
								},
								{
									"content": "Got to learn about some of the more complicated features of the Svelte JavaScript library",
									"items": []
								},
								{
									"content": "Created a polished PWA that can be downloaded on any device or operating system",
									"items": []
								}
							]
						}
					}
				],
				"version": "2.24.3"
			},
			"link": "https://sudoku.travislane.dev/",
			"isRelative": false,
			"img": "./img/projs/simple-sudoku.png",
			"org": "none"
		}
	},
	"featured": "steam-art-manager",
	"organizations": {
		"steamgriddb": {
			"name": "SteamGridDB",
			"img": "./img/projs/sgdb-logo.svg",
			"link": "https://github.com/SteamGridDB",
			"about": "SteamGridDB is a website for sharing community art assets for games, as well as an API for fetching those assets. The community also develops various tools and wrappers based on this API, including SGDBoop, Steam Rom Manager, and more.",
			"description": "My involvement with SteamGridDB started while working on the Steam Art Manager, since I use the SGDB api to load the custom art options for each game. Since then I have continued to work on SARM, contribute to decky-SGDB, node-steamgriddb as well as create my own wrapper for the SGDB API, tauri-steamgriddb.",
			"projects": []
		},
		"steam-deck-homebrew": {
			"name": "Steam Deck Homebrew",
			"img": "./img/projs/logo.png",
			"about": "Steam Deck Homebrew (SDH) is a group of programmers, designers and more whose goal is to bring awesome new functionality to the Steam Deck.",
			"description": "My involvement with SDH started when I came across the Decky Plugin Loader. Since then I have published my own plugin and contributed to the reverse engineered UI components the organization uses",
			"projects": [
				{
					"name": "Decky Frontend Lib",
					"linkId": "decky-frontend-lib"
				},
				{
					"name": "Bash Shortcuts",
					"linkId": "bash-shortcuts"
				},
				{
					"name": "SteamDeck U",
					"linkId": "steamdeck-u"
				}
			],
			"link": "https://github.com/SteamDeckHomebrew"
		},
		"swtor-slicers": {
			"name": "SWTOR Slicers",
			"img": "./img/orgs/SwtorSlicers.png",
			"about": "The SWTOR Slicers Collaboration is a group who enjoys taking Star Wars The Old Republic beyond the game. Whether this be through using models for fan films, or creating tools for the community (such as my <i>Character and Outfit Designer</i>), the community enjoys finding new and unique was to utilize the game.",
			"description": "I got involved with the community because of my work on the <i>Character and Outfit Designer</i>. This was because I added a secondary feature to my tool, the ability to download a <i>.zip</i> file with all of the nessesary information to recreate the character in Blender. This in tandem with other tools I have made expedites the extraction process. Since finishing the <i>Character Designer</i>, I continue to help people, as well as work to make the process even easier.",
			"projects": [
				{
					"name": "Slicers GUI",
					"linkId": "slicers-gui"
				},
				{
					"name": "TORC Character Designer",
					"linkId": "torc-character-designer"
				},
				{
					"name": "SWTOR Slicers Wiki",
					"linkId": "swtor-slicers-wiki"
				},
				{
					"name": "Slicers Blender Importer",
					"linkId": "slicers-blender-importer"
				},
				{
					"name": "swtorslicers.org",
					"linkId": "swtorslicers.org"
				},
				{
					"name": "Wiki Editor",
					"linkId": "wiki-editor"
				}
			],
			"link": "https://swtorslicers.org"
		},
		"torcommunity": {
			"name": "TORCommunity.com",
			"img": "./img/orgs/torc-icon-2016.png",
			"about": "TORCommunity.com is a fan site for Star Wars The Old Republic. It was started in 2008, and has many neat features, such as guides, walkthroughs, tips, tools, and multiple databases. The sites goal is to provide great resources, and improve the experience players have while playing the game.",
			"description": "I got involved with TORCommunity after the owner and head dev of the site reached out to me while I was working on the <i>Character and Outfit Designer</i> and asked if I would be willing to put it up on TORCommunity. He had been looking for a tool just like it for the site for a while, and I was hoping to get it up on one of the fan sites as well. After finishing the app, and putting it up live on the site, he offered me the opportunity to continue working on the site, which I gladly took him up on. Since then, I have continued to work on the <i>Character and Outfit Designer</i>, as well as other parts of the site.",
			"projects": [
				{
					"name": "TORC Character Designer",
					"linkId": "torc-character-designer"
				},
				{
					"name": "TORC NPC Viewers",
					"linkId": "torc-npc-viewers"
				}
			],
			"link": "https://torcommunity.com"
		}
	},
	"experience": {
		"synergy-animal-behavior-behavior-assistant": {
			"company": "Synergy Animal Behavior",
			"img": "./img/exp/synergy.png",
			"position": "Behavior Assistant",
			"description": "Created and managed client databases and resources for Synergy Animal Behavior as a summer job."
		},
		"city-wood-external-developer": {
			"company": "City Wood",
			"img": "./img/projs/citywood-white.png",
			"position": "External Developer",
			"description": "I worked on creating an inventory management tool (dubbed Log Tracker) for City Wood. The web app uses Firebase for hosting, authentication, and data storage, as well as Google Cloud for the Gmail and Maps APIs. I completed the beta stage and stopped receiving contact, so the project remains unfinished."
		}
	},
	"art": {
		"swtor-neon-sign": {
			"name": "SWTOR Neon Sign",
			"img": "./img/art pieces/SWTOR Neon Final Marked.png",
			"description": "This piece is a 3D render of a neon sign inspired SWTOR (Star Wars The Old Republic) logo, made in blender. This was my first original piece."
		},
		"operative-neon-sign": {
			"name": "Operative Neon Sign",
			"img": "./img/art pieces/Operative Neon Marked.png",
			"description": "This was my second attempt to make a neon sign using blender. It has a bit more detail then the previous one, and the pipes and corners are a bit cleaner."
		},
		"guardian-neon-sign": {
			"name": "Guardian Neon Sign",
			"img": "./img/art pieces/Guardian Neon Marked.png",
			"description": "This piece was my third and most recent attemp at making a neon sign in blender. I was satisfied with how the previous sign turned out, however I wanted to add more detail. I settled on modeling a bracket, screws, and clips to 'hold' the sign to the brick wall behind, which turned out really nice."
		},
		"vault-hunter-neon": {
			"name": "Vault Hunter Neon",
			"img": "./img/art pieces/Vault finished v2.png",
			"description": "This piece is based on the vault hunter's icon from borderlands 2. I tried making a more realistic brick wall, but the realism took away from the sign itself, so I reverted it back to the older material."
		},
		"apex-legends-sign": {
			"name": "Apex Legends Sign",
			"img": "./img/projs/Apex Logo Desktop.png",
			"description": "When I started on this piece I had been having a blast playing Apex Legends, so it was a no-brainer. I decided to try some new techniques, such as the wooden background."
		},
		"cyberpunk-city-(ai)": {
			"name": "Cyberpunk City (AI)",
			"img": "./img/projs/Cyberpunk_cityscape.png",
			"description": "AI art has been a hot topic as of late. I decided to try them out and see how easy it was to tell that an AI made the art (this piece is the best result I got). Pieces from the same AI have clear similarities, which is amusing as it shows that it's just an algorithm."
		},
		"aloy-oil-effect": {
			"name": "Aloy Oil Effect",
			"img": "./img/projs/Alloy_before_after.png",
			"description": "This piece is a stylized version of one of the concept art images for Horizon Zero Dawn. I made this as I was learning how to modify images with Gimp. As the name implies, the goal was to create an oil painting effect."
		},
		"outer-worlds-logo": {
			"name": "Outer Worlds Logo",
			"img": "./img/projs/Outer Worlds Final.png",
			"description": "This was my first time using reference images in one of my pieces. I wanted to capture the feel of the Outer Worlds, so I used a few images of the in-game environment to help achieve a similar aesthetic with the border of the logo."
		}
	}
}